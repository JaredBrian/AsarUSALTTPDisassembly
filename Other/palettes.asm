; ==============================================================================

; $0DD218-$0DEBB3 DATA
; Main Palette Data
PaletteData:
{
    ; Standard HEX #RRGGBB format shown above each of the 555 values.

    ; ===============================================================
    ; Main Sprite Palettes 1
    ; ===============================================================

    ; $0DD218
    .sprite_00
    ;          F8F8F8, C83010, 388038, 50B090, 282828, F8C820, F87030
    ;  000000, F8F8F8, C85830, B02828, E07070, 282828, B8B8C8, 787888
    dw          $7FFF,  $08D9,  $1E07,  $4ACA,  $14A5,  $133F,  $19DF

    ; $0DD226
    .sprite_00_right
    dw  $0000,  $7FFF,  $1979,  $14B6,  $39DC,  $14A5,  $66F7,  $45EF

    ; $0DD236
    .sprite_01
    ;          F8F8F8, 4850D0, 60B8C0, A0F8D8, 282828, 88D0F8, 7890F8
    ;  000000, F8F8F8, F880B0, 5068A8, 90A8E8, 282828, F8B050, B86028
    dw          $7FFF,  $6949,  $62EC,  $6FF4,  $14A5,  $7F51,  $7E4F

    ; $0DD244
    .sprite_01_right
    dw  $0000,  $7FFF,  $5A1F,  $55AA,  $76B2,  $14A5,  $2ADF,  $1597

    ; $0DD254
    .sprite_02
    ;          F8F8F8, B0B830, B06028, F0A068, 282828, F07880, B84048
    ;  000000, 282828, 282828, 282828, 282828, 282828, 282828, 282828
    dw          $7FFF,  $1AF6,  $1596,  $369E,  $14A5,  $41FE,  $2517
    dw  $0000,  $14A5,  $14A5,  $14A5,  $14A5,  $14A5,  $14A5,  $14A5

    ; $0DD272
    .sprite_03
    ;          F8F8F8, D86060, B06028, F0A068, 282828, B090F8, 5070C8
    ;  000000, F8F8F8, C83018, 489030, 98D070, 282828, F8D038, B88820
    dw          $7FFF,  $319B,  $1596,  $369E,  $14A5,  $7E56,  $65CA
    dw  $0000,  $7FFF,  $0CD9,  $1A49,  $3B53,  $14A5,  $1F5F,  $1237

    ; $0DD290
    .sprite_04
    ;          F8F8F8, C83010, 788830, A8B860, 282828, F8C820, F87030
    ;  000000, F8F8F8, C85830, B02828, E07070, 282828, B8B8C8, 787888
    dw          $7FFF,  $08D9,  $1A2F,  $32F5,  $14A5,  $133F,  $19DF
    dw  $0000,  $7FFF,  $1979,  $14B6,  $39DC,  $14A5,  $66F7,  $45EF

    ; $0DD2AE
    .sprite_05
    ;          F8F8F8, 207058, 78B0C8, A8F0F8, 282828, 80D0B8, 50A088
    ;  000000, F8F8F8, F880B0, 5068A8, 90A8E8, 282828, F8B050, B86028
    dw          $7FFF,  $2DC4,  $66CF,  $7FD5,  $14A5,  $5F50,  $468A
    dw  $0000,  $7FFF,  $5A1F,  $55AA,  $76B2,  $14A5,  $2ADF,  $1597

    ; $0DD2CC
    .sprite_06
    ;          F8F8F8, D8B818, B06028, F0A068, 282828, F07880, B84048
    ;  000000, 282828, 282828, 282828, 282828, 282828, 282828, 282828
    dw          $7FFF,  $0EFB,  $1596,  $369E,  $14A5,  $41FE,  $2517
    dw  $0000,  $14A5,  $14A5,  $14A5,  $14A5,  $14A5,  $14A5,  $14A5

    ; $0DD2EA
    .sprite_07
    ;          F8F8F8, D86060, B06028, F0A068, 282828, B090F8, 5070C8
    ;  000000, F8F8F8, C83018, 489030, 98D070, 282828, F8D038, B88820
    dw          $7FFF,  $319B,  $1596,  $369E,  $14A5,  $7E56,  $65CA
    dw  $0000,  $7FFF,  $0CD9,  $1A49,  $3B53,  $14A5,  $1F5F,  $1237

    ; ===============================================================
    ; Link Palettes
    ; ===============================================================

    ; $0DD308
    .Link
    .link_00
    Palettes_GreenMail:
    ;          F8F8F8, F0D840, B86820, F0A068, 282828, F87800, C01820
    ;  E860B0, 389068, 40D870, 509010, 78B820, E09050, 885828, C080F0
    dw          $7FFF,  $237E,  $11B7,  $369E,  $14A5,  $01FF,  $1078
    dw  $599D,  $3647,  $3B68,  $0A4A,  $12EF,  $2A5C,  $1571,  $7A18

    ; $0DD326
    .link_01
    Palettes_BlueMail:
    ;          F8F8F8, F0D840, B86820, F0A068, 282828, F87800, C01820
    ;  E860B0, 0060D0, 88A0E8, C0A848, F8D880, E09050, C86020, C080F0
    dw          $7FFF,  $237E,  $11B7,  $369E,  $14A5,  $01FF,  $1078
    dw  $599D,  $6980,  $7691,  $26B8,  $437F,  $2A5C,  $1199,  $7A18

    ; $0DD344
    .link_02
    Palettes_RedMail:
    ;          F8F8F8, F0D840, B86820, F0A068, 282828, F87800, C01820
    ;  E860B0, B81020, F05888, 9878D8, C8A8F8, E09050, 388840, C080F0
    dw          $7FFF,  $237E,  $11B7,  $369E,  $14A5,  $01FF,  $1078
    dw  $599D,  $1057,  $457E,  $6DF3,  $7EB9,  $2A5C,  $2227,  $7A18

    ; $0DD362
    .link_03
    Palettes_Bunny:
    ;          F8F8F8, F0D840, D07020, F0A068, 282828, F87800, C01820
    ;  B86078, 389068, 40D870, 509010, 78B820, F098A8, 901830, C080F0
    dw          $7FFF,  $237E,  $11DA,  $369E,  $14A5,  $01FF,  $1078
    dw  $3D97,  $3647,  $3B68,  $0A4A,  $12EF,  $567E,  $1872,  $7A18

    ; $0DD380
    .link_04
    Palettes_Zap:
    ;          000000, D0B818, 8870F8, 000000, D0C0F8, 000000, D0C0F8
    ;  7058E0, 8870F8, 382880, 8870F8, 382880, 483890, 7830A0, F8F8F8
    dw          $0000,  $0EFA,  $7DD1,  $0000,  $7F1A,  $0000,  $7F1A
    dw  $716E,  $7DD1,  $40A7,  $7DD1,  $40A7,  $48E9,  $50CF,  $7FFF

    ; ===============================================================
    ; Main Sprite Palettes 2
    ; ===============================================================

    ; $0DD39E
    .spritepal0_00
    ;  303020, A08020, E8C870, F0B0C8, C880A0, 68B880, 488848
    dw  $10C6,  $1214,  $3B3D,  $66DE,  $5219,  $42ED,  $2629

    ; $0DD3AC
    .spritepal0_01
    ;  F8F8F8, 305818, C05058, E88888, 282828, 80A060, 587838
    dw  $7FFF,  $0D66,  $2D58,  $463D,  $14A5,  $3290,  $1DEB

    ; $0DD3BA
    .spritepal0_02
    ;  887848, 484018, 5048A0, 8890E0, 282828, 787040, 585030
    dw  $25F1,  $0D09,  $512A,  $7251,  $14A5,  $21CF,  $194B

    ; $0DD3C8
    .spritepal0_03
    ;  B09868, 503808, 00A820, 00E058, 282828, 887040, 685020
    dw  $3676,  $04EA,  $12A0,  $2F80,  $14A5,  $21D1,  $114D

    ; $0DD3D6
    .spritepal0_04
    ;  F8F8F8, 98F898, A85820, F0A068, 282828, F87818, C83800
    dw  $7FFF,  $4FF3,  $1175,  $369E,  $14A5,  $0DFF,  $00F9

    ; $0DD3E4
    .spritepal0_05
    ;  F8F8F8, D0C848, A85820, F0A068, 282828, 78C820, 489808
    dw  $7FFF,  $273A,  $1175,  $369E,  $14A5,  $132F,  $0669

    ; $0DD3F2
    .spritepal0_06
    ;  F8F8F8, 505060, 788890, 78C0A8, 282828, 78E8A8, 503860
    dw  $7FFF,  $314A,  $4A2F,  $570F,  $14A5,  $57AF,  $30EA

    ; $0DD400
    .spritepal0_07
    ;  F8F8F8, D84030, 60A828, A8F070, 282828, F09848, C06018
    dw  $7FFF,  $191B,  $16AC,  $3BD5,  $14A5,  $267E,  $0D98

    ; $0DD40E
    .spritepal0_08
    ;  F8F8F8, 604838, 686898, 686898, 282828, A08050, 886038
    dw  $7FFF,  $1D2C,  $4DAD,  $4DAD,  $14A5,  $2A14,  $1D91

    ; $0DD41C
    .spritepal0_09
    ;  F8F8F8, 286040, C05058, E88888, 282828, 68A080, 488060
    dw  $7FFF,  $2185,  $2D58,  $463D,  $14A5,  $428D,  $3209

    ; $0DD42A
    .spritepal0_0A
    ;  F8F8F8, A0A0A0, 383088, 7068C0, 282828, D88830, A85820
    dw  $7FFF,  $5294,  $44C7,  $61AE,  $14A5,  $1A3B,  $1175

    ; $0DD438
    .spritepal0_0B
    ;  F8D868, 4838A8, F89028, B00020, 181058, C0C0D0, 7878C0
    dw  $377F,  $54E9,  $165F,  $1016,  $2C43,  $6B18,  $61EF

    ; ===============================================================
    ; Environment Palettes
    ; ===============================================================

    ; $0DD446
    .environment_00
    ;  203028, 585858, 7048C0, A068B8, C8B0F0, E8E8E8, A0A0A0
    dw  $14C4,  $2D6B,  $612E,  $5DB4,  $7AD9,  $77BD,  $5294

    ; $0DD454
    .environment_01
    ;  203028, 585858, 407898, 70A8C8, A0D8F8, E8E8E8, A0A0A0
    dw  $14C4,  $2D6B,  $4DE8,  $66AE,  $7F74,  $77BD,  $5294

    ; $0DD462
    .environment_02
    ;  203028, 585858, F84000, F87800, F8F000, E8E8E8, A0A0A0
    dw  $14C4,  $2D6B,  $011F,  $01FF,  $03DF,  $77BD,  $5294

    ; $0DD470
    .environment_03
    ;  F8F8F8, 000000, 000000, 000000, 8000F0, F8D8F8, B800F8
    dw  $7FFF,  $0000,  $0000,  $0000,  $7810,  $7F7F,  $7C17

    ; $0DD47E
    .environment_04
    ;  F8F8F8, 000000, 3840B0, 7080D8, 000000, D8E8F8, 9098E8
    dw  $7FFF,  $0000,  $5907,  $6E0E,  $0000,  $7FBB,  $7672

    ; $0DD48C
    .environment_05
    ;  F8F8F8, F8E0B8, 500000, A880F8, 200858, 8070E8, 5848C0
    dw  $7FFF,  $5F9F,  $000A,  $7E15,  $2C24,  $75D0,  $612B

    ; $0DD49A
    .environment_06
    ;  282828, 508070, 287838, 489848, A08860, B0E8B8, 78B890
    dw  $14A5,  $3A0A,  $1DE5,  $2669,  $3234,  $5FB6,  $4AEF

    ; $0DD4A8
    .environment_07
    ;  282828, 282828, 686028, 888040, A08860, 78B890, 508070
    dw  $14A5,  $14A5,  $158D,  $2211,  $3234,  $4AEF,  $3A0A

    ; $0DD4B6
    .environment_08
    ;  203010, 487040, 886898, 98B0E0, B8A820, A0C898, 709868
    dw  $08C4,  $21C9,  $4DB1,  $72D3,  $12B7,  $4F34,  $366E

    ; $0DD4C4
    .environment_09
    ;  181818, 203010, 705830, 907850, 907850, 709868, 487040
    dw  $0C63,  $08C4,  $196E,  $29F2,  $29F2,  $366E,  $21C9

    ; $0DD4D2
    .environment_0A
    ;  303030, 585858, A87850, D0A830, 784848, E8E8E8, A0A0A0
    dw  $18C6,  $2D6B,  $29F5,  $1ABA,  $252F,  $77BD,  $5294

    ; ===============================================================
    ; AUX Sprite Palettes
    ; ===============================================================

    ; $0DD4E0
    .spriteaux_00
    ;  F8F8F8, A0C0F0, 9020B8, D040F0, 282828, F8A800, E86820
    dw  $7FFF,  $7B14,  $5C92,  $791A,  $14A5,  $02BF,  $11BD

    ; $0DD4EE
    .spriteaux_01
    ;  F8F8F8, D8B060, B02800, F08848, 282828, A0A0A8, 686870
    dw  $7FFF,  $32DB,  $00B6,  $263E,  $14A5,  $5694,  $39AD

    ; $0DD4FC
    .spriteaux_02
    ;  F8F8F8, 885008, 6860B8, 9098E0, 282828, E8B818, B07818
    dw  $7FFF,  $0551,  $5D8D,  $7272,  $14A5,  $0EFD,  $0DF6

    ; $0DD50A
    .spriteaux_03
    ;  F8F8F8, F0D840, A85820, F0A068, 282828, 88D830, 009838
    dw  $7FFF,  $237E,  $1175,  $369E,  $14A5,  $1B71,  $1E60

    ; $0DD518
    .spriteaux_04
    ;  F8F8F8, D02040, A06818, D8B850, 282828, 78D800, 589800
    dw  $7FFF,  $209A,  $0DB4,  $2AFB,  $14A5,  $036F,  $026B

    ; $0DD526
    .spriteaux_05
    ;  F8F8F8, A85810, 903068, C868A0, 282828, F8B058, E07820
    dw  $7FFF,  $0975,  $34D2,  $51B9,  $14A5,  $2EDF,  $11FC

    ; $0DD534
    .spriteaux_06
    ;  E8E8E8, E03810, A07010, E0B020, 282828, C0B098, 887050
    dw  $77BD,  $08FC,  $09D4,  $12DC,  $14A5,  $4ED8,  $29D1

    ; $0DD542
    .spriteaux_07
    ;  F8F8F8, 305830, E06018, D8A800, 282828, 50C090, 408858
    dw  $7FFF,  $1966,  $0D9C,  $02BB,  $14A5,  $4B0A,  $2E28

    ; $0DD550
    .spriteaux_08
    ;  F8F8F8, 503818, C8B818, F8D018, 282828, A89818, 806818
    dw  $7FFF,  $0CEA,  $0EF9,  $0F5F,  $14A5,  $0E75,  $0DB0

    ; $0DD55E
    .spriteaux_09
    ;  F8F8F8, E088B0, 7098C0, A0C8F8, 000000, F8C8F8, F0A0D8
    dw  $7FFF,  $5A3C,  $626E,  $7F34,  $0000,  $7F3F,  $6E9E

    ; $0DD56C
    .spriteaux_0A
    ;  F8F8F8, C83010, A85820, F0A068, 282828, D0C040, 988818
    dw  $7FFF,  $08D9,  $1175,  $369E,  $14A5,  $231A,  $0E33

    ; $0DD57A
    .spriteaux_0B
    ;  F8F8F8, A04010, 289828, 70D8B8, 282828, F89848, C86828
    dw  $7FFF,  $0914,  $1665,  $5F6E,  $14A5,  $267F,  $15B9

    ; $0DD588
    .spriteaux_0C
    ;  F8F8F8, 4848B0, D85820, F8A840, 282828, A8A8F8, 7870E8
    dw  $7FFF,  $5929,  $117B,  $22BF,  $14A5,  $7EB5,  $75CF

    ; $0DD596
    .spriteaux_0D
    ;  F8F8F8, 385088, 886008, C0A028, 282828, 88C8A0, 5088A8
    dw  $7FFF,  $4547,  $0591,  $1698,  $14A5,  $5331,  $562A

    ; $0DD5A4
    .spriteaux_0E
    ;  F8F8F8, C04080, B08828, E8C070, 282828, 90D038, 688020
    dw  $7FFF,  $4118,  $1636,  $3B1D,  $14A5,  $1F52,  $120D

    ; $0DD5B2
    .spriteaux_0F
    ;  F8F8F8, D8A068, 58A040, 90D878, 282828, E06868, A84040
    dw  $7FFF,  $369B,  $228B,  $3F72,  $14A5,  $35BC,  $2115

    ; $0DD5CE
    .spriteaux_10
    ;  F8F8F8, A00028, 00D018, F8C040, 282828, E88820, D03828
    dw  $7FFF,  $1414,  $0F40,  $231F,  $14A5,  $123D,  $14FA

    ; $0DD5CE
    .spriteaux_11
    ;  F8F8F8, F890B8, 905810, C08848, 282828, B088E8, 7848A0
    dw  $7FFF,  $5E5F,  $0972,  $2638,  $14A5,  $7636,  $512F

    ; $0DD5DC
    .spriteaux_12
    ;  A888F8, D81830, A85820, F0A068, 282828, F8F8F8, A888F8
    dw  $7E35,  $187B,  $1175,  $369E,  $14A5,  $7FFF,  $7E35

    ; $0DD5EA
    .spriteaux_13
    ;  F8F8F8, A0A0B0, B83010, E86040, 282828, C0A028, 886008
    dw  $7FFF,  $5A94,  $08D7,  $219D,  $14A5,  $1698,  $0591

    ; $0DD5F8
    .spriteaux_14
    ;  F8F8F8, 903018, D85800, F8A828, 282828, E88068, B04038
    dw  $7FFF,  $0CD2,  $017B,  $16BF,  $14A5,  $361D,  $1D16

    ; $0DD606
    .spriteaux_15
    ;  989898, 203868, 904808, C07818, 000000, B83008, 307088
    dw  $4E73,  $34E4,  $0532,  $0DF8,  $0000,  $04D7,  $45C6

    ; $0DD614
    .spriteaux_16
    ;  F8F8F8, 709868, A07828, E0C040, 282828, A0C898, C0E8B8
    dw  $7FFF,  $366E,  $15F4,  $231C,  $14A5,  $4F34,  $5FB8

    ; $0DD622
    .spriteaux_17
    ;  505050, E8E8E8, C0C0C0, 888888, E8E8E8, 888888, C0C0C0
    dw  $294A,  $77BD,  $6318,  $4631,  $77BD,  $4631,  $6318

    ; ===============================================================
    ; Sword Palettes
    ; ===============================================================

    ; $0DD630
    .sword
    .sword_00 ; no sword and fighter sword
    ;  F8F8F8, F8F848, 6888B8
    dw  $7FFF,  $27FF,  $5E2D

    ; $0DD636
    .sword_01 ; fighter sword
    ;  7090F8, A0F8D8, A83838
    dw  $7E4E,  $6FF4,  $1CF5

    ; $0DD63C
    .sword_02 ; tempered sword
    ;  D84810, F8A028, 68A0F8
    dw  $093B,  $169F,  $7E8D

    ; $0DD642
    .sword_03 ; golden sword
    ;  F8C800, F8F8C8, 009048
    dw  $033F,  $67FF,  $2640

    ; ===============================================================
    ; Shield Palettes
    ; ===============================================================

    ; $0DD648
    .shield
    .shield_00
    ;  F8F8F8, 383838, 8080F0, 2828C8
    dw  $7FFF,  $1CE7,  $7A10,  $64A5

    ; $0DD650
    .shield_01
    ;  F8D098, 383838, E0A058, B02828
    dw  $4F5F,  $1CE7,  $2E9C,  $14B6

    ; $0DD658
    .shield_02
    ;  C8E0E0, 383838, C8B800, 988800
    dw  $7399,  $1CE7,  $02F9,  $0233

    ; ===============================================================
    ; HUD Palettes
    ; ===============================================================

    ; $0DD660
    .hud_00
    ;  000000, C06000, A8A8A8, 000000
    dw  $0000,  $0198,  $56B5,  $0000

    ; $0DD668
    .hud_01
    ;  000000, C00000, F8F8F8, 000000
    dw  $0000,  $0018,  $7FFF,  $0000

    ; $0DD670
    .hud_02
    ;  000000, E0A800, F8F8F8, 000000
    dw  $0000,  $02BC,  $7FFF,  $0000

    ; $0DD678
    .hud_03
    ;  000000, 4870D0, F8F8F8, 000000
    dw  $0000,  $69C9,  $7FFF,  $0000

    ; $0DD680
    .hud_04
    ;  000000, 303030, 686870, 000000
    dw  $0000,  $18C6,  $39AD,  $0000

    ; $0DD688
    .hud_05
    ;  000000, C02800, E8C880, 000000
    dw  $0000,  $00B8,  $433D,  $0000

    ; $0DD690
    .hud_06
    ;  000000, 000070, F8F8F8, C00000
    dw  $0000,  $3800,  $7FFF,  $0018

    ; $0DD698
    .hud_07
    ;  000000, 20C028, F8F8F8, 000000
    dw  $0000,  $1704,  $7FFF,  $0000

    ; $0DD6A0
    .hud_08
    ;  000000, 785840, C89058, 403028
    dw  $0000,  $216F,  $2E59,  $14C8

    ; $0DD6A8
    .hud_09
    ;  000000, C00000, F8F8F8, 000000
    dw  $0000,  $0018,  $7FFF,  $0000

    ; $0DD6B0
    .hud_0A
    ;  000000, 000000, 28F858, 000000
    dw  $0000,  $0000,  $2FE5,  $0000

    ; $0DD6B8
    .hud_0B
    ;  000000, 000000, F8C038, 000000
    dw  $0000,  $0000,  $1F1F,  $0000

    ; $0DD6C0
    .hud_0C
    ;  000000, C0B078, A09058, E8E848
    dw  $0000,  $3ED8,  $2E54,  $27BD

    ; $0DD6C8
    .hud_0D
    ;  000000, C0B078, A09058, 807038
    dw  $0000,  $3ED8,  $2E54,  $1DD0

    ; $0DD6D0
    .hud_0E
    ;  000000, 000070, F05038, 000000
    dw  $0000,  $3800,  $1D5E,  $0000

    ; $0DD6D8
    .hud_0F
    ;  000000, 000000, F8F8F8, 000000
    dw  $0000,  $0000,  $7FFF,  $0000

    ; ===============================================================
    ; Unused Palettes
    ; ===============================================================

    ; $0DD6E0
    .sword_04
    ;  F8C800, F8F8C8, 009048
    dw  $033F,  $67FF,  $2640

    ; $0DD6E6
    ;  C860E8, C860E8, C860E8, C860E8
    dw  $7599,  $7599,  $7599,  $7599

    ; $0DD6EE
    .unused_00
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; ===============================================================
    ; Dungeon Map Sprite Palettes
    ; ===============================================================

    ; $0DD70A
    .dungeonmap_sprites_00
    ;  F8F8F8, C80000, F8F8F8, F8F8F8, 282828, 000000, 000000
    ;  F8F8F8, F8F828, 90D0F8, 705840, 282828, 000000, 000000
    ;  9870F8, 70E0F8, 68A8C8, B83858, 282828, C0B0F8, 000000
    dw  $7FFF,  $0019,  $7FFF,  $7FFF,  $14A5,  $0000,  $0000
    dw  $7FFF,  $17FF,  $7F52,  $216E,  $14A5,  $0000,  $0000
    dw  $7DD3,  $7F8E,  $66AD,  $2CF7,  $14A5,  $7ED8,  $0000

    ; ===============================================================
    ; Dungeon Palettes
    ; ===============================================================

    ; $0DD734
    .dungeon_00
    ;          303018, 584828, 807030, A89868, E8D0A0, 703838, 482020
    ;  F8F8F8, 303018, 584828, 807030, A89868, E8D0A0, 703838, 482020
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 202018, 405860, 587078, 688088, 383850, 807030, 703838
    ;          303018, 584828, 988830, C8C070, 602828, 387098, 305088
    ;  F8F8F8, 202018, 284850, 305860, 406870, 5858F8, 584828, 482020
    ;          303020, 705840, 987840, E0B070, 683030, F0B0C8, C870B0
    ;  F8F8F8, 282818, 484858, 885858, 986868, 383850, 807030, 703838
    ;          181828, 804040, C06868, E0E0E0, 404080, D8B028, 6868C0
    ;  F8F8F8, 282818, 484858, 704040, 805050, 383850, 505060, 5858F8
    ;          303018, 584828, 807030, A89868, E8D0A0, 584828, 5858F8
    ;  F8F8F8, 282818, 504028, 000000, 000000, 683030, A89868, 807030
    dw          $0CC6,  $152B,  $19D0,  $3675,  $535D,  $1CEE,  $1089
    dw  $7FFF,  $0CC6,  $152B,  $19D0,  $3675,  $535D,  $1CEE,  $1089
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $0C84,  $3168,  $3DCB,  $460D,  $28E7,  $19D0,  $1CEE
    dw          $0CC6,  $152B,  $1A33,  $3B19,  $14AC,  $4DC7,  $4546
    dw  $7FFF,  $0C84,  $2925,  $3166,  $39A8,  $7D6B,  $152B,  $1089
    dw          $10C6,  $216E,  $21F3,  $3ADC,  $18CD,  $66DE,  $59D9
    dw  $7FFF,  $0CA5,  $2D29,  $2D71,  $35B3,  $28E7,  $19D0,  $1CEE
    dw          $1463,  $2110,  $35B8,  $739C,  $4108,  $16DB,  $61AD
    dw  $7FFF,  $0CA5,  $2D29,  $210E,  $2950,  $28E7,  $314A,  $7D6B
    dw          $0CC6,  $152B,  $19D0,  $3675,  $535D,  $152B,  $7D6B
    dw  $7FFF,  $0CA5,  $150A,  $0000,  $0000,  $18CD,  $3675,  $19D0

    ; $0DD7E8
    .dungeon_01
    ;          181828, 383058, 504878, 706890, A098C0, 603838, 482020
    ;  F8F8F8, 181828, 383058, 504878, 706890, A098C0, 684838, 503020
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 181828, 304858, 486070, 587078, 304858, 504878, 684838
    ;          181828, 383058, 504878, 706890, A098C0, 603838, 482020
    ;  F8F8F8, 181828, 203848, 284050, 385060, 203848, 383058, 503020
    ;          303030, 584038, 806048, A07840, 403028, 603838, 482020
    ;  F8F8F8, 302018, 403020, 504030, 605040, A88868, E0C090, F8E8D8
    ;          303030, 804040, C06868, E0E0E0, 404080, D8B028, 6868C0
    ;  F8F8F8, 181828, 203848, 304858, 486070, 486070, 989898, B8B8B8
    ;          181828, 3840C8, 4850D0, 88D0F8, 383888, 4858B8, 7890F8
    ;  F8F8F8, 181820, 383050, 203848, 286828, 286828, 706890, 504878
    dw          $1463,  $2CC7,  $3D2A,  $49AE,  $6274,  $1CEC,  $1089
    dw  $7FFF,  $1463,  $2CC7,  $3D2A,  $49AE,  $6274,  $1D2D,  $10CA
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $1463,  $2D26,  $3989,  $3DCB,  $2D26,  $3D2A,  $1D2D
    dw          $1463,  $2CC7,  $3D2A,  $49AE,  $6274,  $1CEC,  $1089
    dw  $7FFF,  $1463,  $24E4,  $2905,  $3147,  $24E4,  $2CC7,  $10CA
    dw          $18C6,  $1D0B,  $2590,  $21F4,  $14C8,  $1CEC,  $1089
    dw  $7FFF,  $0C86,  $10C8,  $190A,  $214C,  $3635,  $4B1C,  $6FBF
    dw          $18C6,  $2110,  $35B8,  $739C,  $4108,  $16DB,  $61AD
    dw  $7FFF,  $1463,  $24E4,  $2D26,  $3989,  $3989,  $4E73,  $5EF7
    dw          $1463,  $6507,  $6949,  $7F51,  $44E7,  $5D69,  $7E4F
    dw  $7FFF,  $1063,  $28C7,  $24E4,  $15A5,  $15A5,  $49AE,  $3D2A

    ; $0DD89C
    .dungeon_02
    ;          382828, 785040, 986840, A88060, D0A878, C0B8A8, 784048
    ;  F8F8F8, 382828, 785040, 986840, A88060, D0A878, C0B8A8, 603838
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 382828, 405860, 587078, 688088, 405860, 986040, 603838
    ;          382828, 785040, 986840, C09060, 4030C8, 7868F8, F8F8F8
    ;  F8F8F8, 282818, 684830, 785840, 886850, 684830, 785040, 503030
    ;          483828, 886840, B89068, D0A070, 58E800, C8B0A8, B89890
    ;  F8F8F8, 282818, 684830, 785840, 886850, 684830, 986040, 603838
    ;          303030, 804040, C06868, E0E0E0, 404078, D0A830, 7070B8
    ;  F8F8F8, 282818, 204048, 305860, 406870, F8F8F8, 785040, 503030
    ;          382828, 989808, 686840, 787840, F8F8F8, F8F8F8, F8F8F8
    ;  F8F8F8, 282818, 282010, 403828, 206050, 206050, 382828, 382828
    dw          $14A7,  $214F,  $21B3,  $3215,  $3EBA,  $56F8,  $250F
    dw  $7FFF,  $14A7,  $214F,  $21B3,  $3215,  $3EBA,  $56F8,  $1CEC
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $14A7,  $3168,  $3DCB,  $460D,  $3168,  $2193,  $1CEC
    dw          $14A7,  $214F,  $21B3,  $3258,  $64C8,  $7DAF,  $7FFF
    dw  $7FFF,  $0CA5,  $192D,  $216F,  $29B1,  $192D,  $214F,  $18CA
    dw          $14E9,  $21B1,  $3657,  $3A9A,  $03AB,  $56D9,  $4A77
    dw  $7FFF,  $0CA5,  $192D,  $216F,  $29B1,  $192D,  $2193,  $1CEC
    dw          $18C6,  $2110,  $35B8,  $739C,  $3D08,  $1ABA,  $5DCE
    dw  $7FFF,  $0CA5,  $2504,  $3166,  $39A8,  $7FFF,  $214F,  $18CA
    dw          $14A7,  $0673,  $21AD,  $21EF,  $7FFF,  $7FFF,  $7FFF
    dw  $7FFF,  $0CA5,  $0885,  $14E8,  $2984,  $2984,  $14A7,  $14A7

    ; $0DD950
    .dungeon_03
    ;          282828, 305030, 407048, 80A870, C8D0A0, 606080, 484868
    ;  F8F8F8, 282828, 305030, 407048, 80A870, C8D0A0, 404878, 383850
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 181818, 404860, 505070, 606080, 303858, 407050, 404878
    ;          282828, 305030, 407048, 80A870, C8D0A0, E0A050, A85050
    ;  F8F8F8, 181818, 303058, 383858, 484868, 283050, 204838, 383850
    ;          284028, 405840, 587058, 789078, E8D090, C8A068, A87848
    ;  F8F8F8, 282828, 404040, 505050, 606060, 989898, D0D0D0, F8F8F8
    ;          303030, 804040, C06868, E0E0E0, 404078, D0A830, 7070B8
    ;  F8F8F8, 202020, 382838, 483048, 584058, 505070, A0A0A0, E0E0E0
    ;          282828, 405888, 6878B0, 8090C8, 286050, 409070, 58C8A0
    ;  F8F8F8, 282828, 284828, 000000, 683838, 683838, 80A870, 407048
    dw          $14A5,  $1946,  $25C8,  $3AB0,  $5359,  $418C,  $3529
    dw  $7FFF,  $14A5,  $1946,  $25C8,  $3AB0,  $5359,  $3D28,  $28E7
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $0C63,  $3128,  $394A,  $418C,  $2CE6,  $29C8,  $3D28
    dw          $14A5,  $1946,  $25C8,  $3AB0,  $5359,  $2A9C,  $2955
    dw  $7FFF,  $0C63,  $2CC6,  $2CE7,  $3529,  $28C5,  $1D24,  $28E7
    dw          $1505,  $2168,  $2DCB,  $3E4F,  $4B5D,  $3699,  $25F5
    dw  $7FFF,  $14A5,  $2108,  $294A,  $318C,  $4E73,  $6B5A,  $7FFF
    dw          $18C6,  $2110,  $35B8,  $739C,  $3D08,  $1ABA,  $5DCE
    dw  $7FFF,  $1084,  $1CA7,  $24C9,  $2D0B,  $394A,  $5294,  $739C
    dw          $14A5,  $4568,  $59ED,  $6650,  $2985,  $3A48,  $532B
    dw  $7FFF,  $14A5,  $1525,  $0000,  $1CED,  $1CED,  $3AB0,  $25C8

    ; $0DDA04
    .dungeon_04
    ;          202848, 2848B0, 5890D0, A8E0E8, D8F8F8, 7070B8, 6060A8
    ;  F8F8F8, 202848, 2848B0, 5890D0, A8E0E8, D8F8F8, 7078B8, 505898
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 202848, 505898, 6068A8, 7078B8, 284898, 7078B8, 4068A0
    ;          202848, 2848B0, 5890D0, D8E8E8, D85820, 7870E8, A8A8F8
    ;  F8F8F8, 202848, 505898, 6068A8, 7078B8, 385078, 7078B8, 4068A0
    ;          202848, 4828F0, 8070F8, 58B0E8, D0F8F8, 4828C8, 6068A8
    ;  F8F8F8, 403068, 505898, 6068A8, 7078B8, 98A8D0, C0D0F0, F8F8F8
    ;          181828, 804050, C06878, E0E0E0, 5050C0, D0A830, 8888F8
    ;  F8F8F8, 202848, 5860B8, 404898, 304080, 48C0B0, A0A0A0, E0E0E0
    ;          202848, 406090, 20B8B8, 38D8E0, 383888, 4858B8, 7890F8
    ;  F8F8F8, 202040, 2840A8, 000000, 000000, 5860B8, A8E0E8, C8F8F8
    dw          $24A4,  $5925,  $6A4B,  $7795,  $7FFB,  $5DCE,  $558C
    dw  $7FFF,  $24A4,  $5925,  $6A4B,  $7795,  $7FFB,  $5DEE,  $4D6A
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $24A4,  $4D6A,  $55AC,  $5DEE,  $4D25,  $5DEE,  $51A8
    dw          $24A4,  $5925,  $6A4B,  $77BB,  $117B,  $75CF,  $7EB5
    dw  $7FFF,  $24A4,  $4D6A,  $55AC,  $5DEE,  $3D47,  $5DEE,  $51A8
    dw          $24A4,  $78A9,  $7DD0,  $76CB,  $7FFA,  $64A9,  $55AC
    dw  $7FFF,  $34C8,  $4D6A,  $55AC,  $5DEE,  $6AB3,  $7B58,  $7FFF
    dw          $1463,  $2910,  $3DB8,  $739C,  $614A,  $1ABA,  $7E31
    dw  $7FFF,  $24A4,  $5D8B,  $4D28,  $4106,  $5B09,  $5294,  $739C
    dw          $24A4,  $4988,  $5EE4,  $7367,  $44E7,  $5D69,  $7E4F
    dw  $7FFF,  $2084,  $5505,  $0000,  $0000,  $5D8B,  $7795,  $7FF9

    ; $0DDAB8
    .dungeon_05
    ;          282818, 503820, 685030, 987850, B0A878, 587058, 486048
    ;  F8F8F8, 282818, 503820, 685030, 987850, B0A878, 405840, 304030
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 181818, 405840, 506850, 686850, 806040, 685030, 405840
    ;          282818, 503820, 685030, 987850, B0A878, 60B050, 287828
    ;  F8F8F8, 181818, 304830, 385840, 585840, 284030, 503820, 304030
    ;          282818, 503820, 685030, 987850, B0A878, 686850, 506850
    ;  F8F8F8, 383820, 505028, 686838, 808050, B8B880, E8E8B8, F8F8F8
    ;          303030, 804040, C06868, E0E0E0, 404080, D0A830, 6868C0
    ;  F8F8F8, 181818, 706828, 807838, 706828, 506850, A0A0A0, E0E0E0
    ;          303048, 304888, 3858C0, 4870C8, 385088, 4070B0, 60A0D0
    ;  F8F8F8, 282818, 503820, 000000, 607838, 607838, 987850, 685030
    dw          $0CA5,  $10EA,  $194D,  $29F3,  $3EB6,  $2DCB,  $2589
    dw  $7FFF,  $0CA5,  $10EA,  $194D,  $29F3,  $3EB6,  $2168,  $1906
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $0C63,  $2168,  $29AA,  $29AD,  $2190,  $194D,  $2168
    dw          $0CA5,  $10EA,  $194D,  $29F3,  $3EB6,  $2ACC,  $15E5
    dw  $7FFF,  $0C63,  $1926,  $2167,  $216B,  $1905,  $10EA,  $1906
    dw          $0CA5,  $10EA,  $194D,  $29F3,  $3EB6,  $29AD,  $29AA
    dw  $7FFF,  $10E7,  $154A,  $1DAD,  $2A10,  $42F7,  $5FBD,  $7FFF
    dw          $18C6,  $2110,  $35B8,  $739C,  $4108,  $1ABA,  $61AD
    dw  $7FFF,  $0C63,  $15AE,  $1DF0,  $15AE,  $29AA,  $5294,  $739C
    dw          $24C6,  $4526,  $6167,  $65C9,  $4547,  $59C8,  $6A8C
    dw  $7FFF,  $0CA5,  $10EA,  $0000,  $1DEC,  $1DEC,  $29F3,  $194D

    ; $0DDB6C
    .dungeon_06
    ;          202020, 503030, 704848, 987070, D0A0A0, 606080, 484868
    ;  F8F8F8, 202020, 503030, 704848, 987870, D0A8A0, 484858, 383848
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 181818, 484868, 505070, 606080, 404060, 704848, 484858
    ;          202020, 503030, 704848, 987070, D0A8A0, D09038, A83838
    ;  F8F8F8, 181818, 303050, 383858, 484860, 303050, 503030, 383848
    ;          202020, 503030, 704848, 987070, D0A8A0, 585878, 484868
    ;  F8F8F8, 203838, 285048, 306058, 387068, 7888B0, C0C8E8, F8F8F8
    ;          202020, 804040, C06868, E0E0E0, 404080, D8B028, 6060B8
    ;  F8F8F8, 202020, 483028, 603028, 684030, 484868, A0A0A0, E0E0E0
    ;          282850, 404860, 505870, 606880, 383880, 4858B8, 7080E0
    ;  F8F8F8, 201818, 482828, 000000, 583838, 583838, 987870, 784840
    dw          $1084,  $18CA,  $252E,  $39D3,  $529A,  $418C,  $3529
    dw  $7FFF,  $1084,  $18CA,  $252E,  $39F3,  $52BA,  $2D29,  $24E7
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $0C63,  $3529,  $394A,  $418C,  $3108,  $252E,  $2D29
    dw          $1084,  $18CA,  $252E,  $39D3,  $52BA,  $1E5A,  $1CF5
    dw  $7FFF,  $0C63,  $28C6,  $2CE7,  $3129,  $28C6,  $18CA,  $24E7
    dw          $1084,  $18CA,  $252E,  $39D3,  $52BA,  $3D6B,  $3529
    dw  $7FFF,  $1CE4,  $2545,  $2D86,  $35C7,  $5A2F,  $7738,  $7FFF
    dw          $1084,  $2110,  $35B8,  $739C,  $4108,  $16DB,  $5D8C
    dw  $7FFF,  $1084,  $14C9,  $14CC,  $190D,  $3529,  $5294,  $739C
    dw          $28A5,  $3128,  $396A,  $41AC,  $40E7,  $5D69,  $720E
    dw  $7FFF,  $0C64,  $14A9,  $0000,  $1CEB,  $1CEB,  $39F3,  $212F

    ; $0DDC20
    .dungeon_07
    ;          282020, 403020, 583830, 886038, A88858, 785048, 604040
    ;  F8F8F8, 282020, 483020, 684830, 886038, A88858, 488080, 386060
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 282020, 483028, 583830, 704840, 403020, 705840, 584030
    ;          303030, 206030, 309048, 48D870, F87830, A83030, 482820
    ;  F8F8F8, 282020, 402020, 482820, 583028, 302020, 604830, 403020
    ;          282020, 705840, 987840, B8A880, 5068C8, 584030, 583830
    ;  F8F8F8, 282020, 483028, 583830, 704840, 906858, C0A080, F8E8C8
    ;          202020, 804040, C06868, E0E0E0, 304880, D8B028, 5870C0
    ;  F8F8F8, 181818, 684020, 886038, A88858, 684840, A0A0A0, E0E0E0
    ;          181828, 3038B0, 4850C0, 5860C8, 383888, 4858B8, 7088F0
    ;  F8F8F8, 282020, 483020, 000000, 000000, 286868, 282020, 282020
    dw          $1085,  $10C8,  $18EB,  $1D91,  $2E35,  $254F,  $210C
    dw  $7FFF,  $1085,  $10C9,  $192D,  $1D91,  $2E35,  $4209,  $3187
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $1085,  $14C9,  $18EB,  $212E,  $10C8,  $216E,  $190B
    dw          $18C6,  $1984,  $2646,  $3B69,  $19FF,  $18D5,  $10A9
    dw  $7FFF,  $1085,  $1088,  $10A9,  $14CB,  $1086,  $192C,  $10C8
    dw          $1085,  $216E,  $21F3,  $42B7,  $65AA,  $190B,  $18EB
    dw  $7FFF,  $1085,  $14C9,  $18EB,  $212E,  $2DB2,  $4298,  $67BF
    dw          $1084,  $2110,  $35B8,  $739C,  $4126,  $16DB,  $61CB
    dw  $7FFF,  $0C63,  $110D,  $1D91,  $2E35,  $212D,  $5294,  $739C
    dw          $1463,  $58E6,  $6149,  $658B,  $44E7,  $5D69,  $7A2E
    dw  $7FFF,  $1085,  $10C9,  $0000,  $0000,  $35A5,  $1085,  $1085

    ; $0DDCD4
    .dungeon_08
    ;          181818, 404040, 686868, 909090, C8C8C8, 607060, 506050
    ;  F8F8F8, 181818, 404040, 686868, 909090, C8C8C8, 485848, 384838
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 202020, 405040, 506050, 606860, 405040, 686868, 485848
    ;          181818, 404040, 686868, 909090, C8C8C8, B8B030, 706830
    ;  000000, 202020, 304030, 384838, 485848, 304030, 404040, 384838
    ;          181818, 585858, A0A0A0, E0E0E0, 308858, 50E098, 30A870
    ;  F8F8F8, 383020, 484020, 686038, 807850, C0B880, E8E0B8, F8F8F8
    ;          303030, 804040, C06868, E0E0E0, 404080, D0A830, 6868C0
    ;  F8F8F8, 202020, 483820, 584828, 685838, 506050, A0A0A0, E0E0E0
    ;          202020, 405040, 607060, B89868, 383888, 4858B8, 7890F8
    ;  F8F8F8, 181818, 383838, 000000, 000000, 607038, 909090, 686868
    dw          $0C63,  $2108,  $35AD,  $4A52,  $6739,  $31CC,  $298A
    dw  $7FFF,  $0C63,  $2108,  $35AD,  $4A52,  $6739,  $2569,  $1D27
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $1084,  $2148,  $298A,  $31AC,  $2148,  $35AD,  $2569
    dw          $0C63,  $2108,  $35AD,  $4A52,  $6739,  $1AD7,  $19AE
    dw  $0000,  $1084,  $1906,  $1D27,  $2569,  $1906,  $2108,  $1D27
    dw          $0C63,  $2D6B,  $5294,  $739C,  $2E26,  $4F8A,  $3AA6
    dw  $7FFF,  $10C7,  $1109,  $1D8D,  $29F0,  $42F8,  $5F9D,  $7FFF
    dw          $18C6,  $2110,  $35B8,  $739C,  $4108,  $1ABA,  $61AD
    dw  $7FFF,  $1084,  $10E9,  $152B,  $1D6D,  $298A,  $5294,  $739C
    dw          $1084,  $2148,  $31CC,  $3677,  $44E7,  $5D69,  $7E4F
    dw  $7FFF,  $0C63,  $1CE7,  $0000,  $0000,  $1DCC,  $4A52,  $35AD

    ; $0DDD88
    .dungeon_09
    ;          202020, 303830, 605030, 907850, C0B088, 606050, 505020
    ;  F8F8F8, 202020, 303830, 605030, 907850, C0B088, 502828, 302020
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 181828, 405020, 505020, 606050, 285030, 506048, 502828
    ;          202020, 303830, 605030, 907850, C0B088, 606050, 502828
    ;  F8F8F8, 181828, 382020, 402828, 404028, F8F8F8, 384038, 302020
    ;          202020, 303830, 605030, 907850, C0B088, 606050, 502828
    ;  F8F8F8, 303040, 404060, 585880, 7070A0, 9090C0, C8C8F8, F8F8F8
    ;          181828, 804040, C06868, E0E0E0, 404080, D8B028, 6868C0
    ;  F8F8F8, 202020, 204870, 306090, 5880B0, 505020, 888888, B0B0B0
    ;          181828, 88D0F8, 4850D0, 3840C8, 383888, 4858B8, 7890F8
    ;  F8F8F8, 181828, 383058, 404040, F8F8F8, 683030, 907850, 685840
    dw          $1084,  $18E6,  $194C,  $29F2,  $46D8,  $298C,  $114A
    dw  $7FFF,  $1084,  $18E6,  $194C,  $29F2,  $46D8,  $14AA,  $1086
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $1463,  $1148,  $114A,  $298C,  $1945,  $258A,  $14AA
    dw          $1084,  $18E6,  $194C,  $29F2,  $46D8,  $298C,  $14AA
    dw  $7FFF,  $1463,  $1087,  $14A8,  $1508,  $7FFF,  $1D07,  $1086
    dw          $1084,  $18E6,  $194C,  $29F2,  $46D8,  $298C,  $14AA
    dw  $7FFF,  $20C6,  $3108,  $416B,  $51CE,  $6252,  $7F39,  $7FFF
    dw          $1463,  $2110,  $35B8,  $739C,  $4108,  $16DB,  $61AD
    dw  $7FFF,  $1084,  $3924,  $4986,  $5A0B,  $114A,  $4631,  $5AD6
    dw          $1463,  $7F51,  $6949,  $6507,  $44E7,  $5D69,  $7E4F
    dw  $7FFF,  $1463,  $2CC7,  $2108,  $7FFF,  $18CD,  $29F2,  $216D

    ; $0DDE3C
    .dungeon_0A
    ;          202020, 404048, 505060, 787888, B8B8C8, 406060, 306030
    ;  F8F8F8, 202020, 404048, 505060, 787888, B8B8C8, 386038, 304830
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 202020, 284828, 306030, 406060, 686030, 505060, 386038
    ;          202020, 404048, 505060, 787888, B8B8C8, 406060, 306030
    ;  F8F8F8, 202020, 382820, 403028, 483830, 302820, 404048, 304830
    ;          202020, 504030, 605040, 706050, C0C0D0, 406060, 306030
    ;  F8F8F8, 483820, 504830, 605840, 706850, A08868, D0C0A8, F8E8D8
    ;          303030, 804040, C06868, E0E0E0, 404080, D8B028, 6868C0
    ;  F8F8F8, 202020, 284828, 306030, 406060, 306030, A0A0A0, E0E0E0
    ;          181828, 3840C8, 4850D0, 88D0F8, 383888, 4858B8, 7890F8
    ;  F8F8F8, 181818, 282828, 303030, 686030, 686030, 787888, 505050
    dw          $1084,  $2508,  $314A,  $45EF,  $66F7,  $3188,  $1986
    dw  $7FFF,  $1084,  $2508,  $314A,  $45EF,  $66F7,  $1D87,  $1926
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $1084,  $1525,  $1986,  $3188,  $198D,  $314A,  $1D87
    dw          $1084,  $2508,  $314A,  $45EF,  $66F7,  $3188,  $1986
    dw  $7FFF,  $1084,  $10A7,  $14C8,  $18E9,  $10A6,  $2508,  $1926
    dw          $1084,  $190A,  $214C,  $298E,  $6B18,  $3188,  $1986
    dw  $7FFF,  $10E9,  $192A,  $216C,  $29AE,  $3634,  $571A,  $6FBF
    dw          $18C6,  $2110,  $35B8,  $739C,  $4108,  $16DB,  $61AD
    dw  $7FFF,  $1084,  $1525,  $1986,  $3188,  $1986,  $5294,  $739C
    dw          $1463,  $6507,  $6949,  $7F51,  $44E7,  $5D69,  $7E4F
    dw  $7FFF,  $0C63,  $14A5,  $18C6,  $198D,  $198D,  $45EF,  $294A

    ; $0DDEF0
    .dungeon_0B
    ;          181818, 285030, 307838, 80B070, B8D8A8, 509880, 408068
    ;  F8F8F8, 181818, 285030, 307838, 80B070, B8D8A8, 786838, 585020
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 181818, 386850, 408068, 509880, 285848, 307830, 786838
    ;          181818, 285030, 307838, 80B070, 386850, 408068, 509880
    ;  F8F8F8, 181818, 285048, 286050, 387058, 285048, 285028, 585020
    ;          282828, 305830, 58B858, 50C090, F8F8F8, 886848, 683838
    ;  F8F8F8, 483828, 584828, 685838, 807050, 988868, B8A888, F8E8D8
    ;          181828, 804040, C06868, E0E0E0, 404080, D8B028, 6868C0
    ;  F8F8F8, 181818, 382820, 503828, 584838, 387058, A0A0A0, E0E0E0
    ;          303030, 0000E0, 2020F8, 2828F8, 185068, 186880, 1890A0
    ;  F8F8F8, 101018, 284828, 000000, 000000, 807038, 80B070, 685848
    dw          $0C63,  $1945,  $1DE6,  $3AD0,  $5777,  $426A,  $3608
    dw  $7FFF,  $0C63,  $1945,  $1DE6,  $3AD0,  $5777,  $1DAF,  $114B
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $0C63,  $29A7,  $3608,  $426A,  $2565,  $19E6,  $1DAF
    dw          $0C63,  $1945,  $1DE6,  $3AD0,  $29A7,  $3608,  $426A
    dw  $7FFF,  $0C63,  $2545,  $2985,  $2DC7,  $2545,  $1545,  $114B
    dw          $14A5,  $1966,  $2EEB,  $4B0A,  $7FFF,  $25B1,  $1CED
    dw  $7FFF,  $14E9,  $152B,  $1D6D,  $29D0,  $3633,  $46B7,  $6FBF
    dw          $1463,  $2110,  $35B8,  $739C,  $4108,  $16DB,  $61AD
    dw  $7FFF,  $0C63,  $10A7,  $14EA,  $1D2B,  $2DC7,  $5294,  $739C
    dw          $18C6,  $7000,  $7C84,  $7CA5,  $3543,  $41A3,  $5243
    dw  $7FFF,  $0C42,  $1525,  $0000,  $0000,  $1DD0,  $3AD0,  $256D

    ; $0DDFA4
    .dungeon_0C
    ;          282020, 483020, 684830, 886038, A88858, 785048, 604040
    ;  F8F8F8, 282020, 483020, 684830, 886038, A88858, 488080, 386060
    ;          303030, 585858, A0A0A0, E8E8E8, 784848, D0A830, A87850
    ;  F8F8F8, 282020, 483028, 583830, 704840, 403020, 705840, 584030
    ;          F8F8F8, 989868, C0C068, E8E868, 282828, 484868, 707068
    ;  F8F8F8, 282020, 402020, 482820, 583028, 302020, 604830, 403020
    ;          181828, 404028, 585830, 909060, C0C0A0, 604030, 583830
    ;  F8F8F8, 282020, 483028, 583830, 704840, 906858, C0A080, F8E8C8
    ;          202020, 804040, C06868, E0E0E0, 404868, D8B028, 6068B0
    ;  F8F8F8, 181818, 684020, 886038, A88858, 684840, A0A0A0, E0E0E0
    ;          282828, 901818, E02020, F87820, 384898, 6078C0, 7090F8
    ;  F8F8F8, 282020, 483020, 000000, 707030, 286868, 282020, 282020
    dw          $1085,  $10C9,  $192D,  $1D91,  $2E35,  $254F,  $210C
    dw  $7FFF,  $1085,  $10C9,  $192D,  $1D91,  $2E35,  $4209,  $3187
    dw          $18C6,  $2D6B,  $5294,  $77BD,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $1085,  $14C9,  $18EB,  $212E,  $10C8,  $216E,  $190B
    dw          $7FFF,  $3673,  $3718,  $37BD,  $14A5,  $3529,  $35CE
    dw  $7FFF,  $1085,  $1088,  $10A9,  $14CB,  $1086,  $192C,  $10C8
    dw          $1463,  $1508,  $196B,  $3252,  $5318,  $190C,  $18EB
    dw  $7FFF,  $1085,  $14C9,  $18EB,  $212E,  $2DB2,  $4298,  $67BF
    dw          $1084,  $2110,  $35B8,  $739C,  $3528,  $16DB,  $59AC
    dw  $7FFF,  $0C63,  $110D,  $1D91,  $2E35,  $212D,  $5294,  $739C
    dw          $14A5,  $0C72,  $109C,  $11FF,  $4D27,  $61EC,  $7E4E
    dw  $7FFF,  $1085,  $10C9,  $0000,  $19CE,  $35A5,  $1085,  $1085

    ; $0DE058
    .dungeon_0D
    ;          181818, 583048, 785850, A08868, C8B890, 686870, 585860
    ;  F8F8F8, 181818, 583048, 785850, A08868, C8B890, 386060, 284848
    ;          303030, 585858, A0A0A0, E0E0E0, 784848, D0A830, A87850
    ;  F8F8F8, 181818, 505058, 585860, 686870, 502828, 785850, 386060
    ;          181818, 583048, 785850, A08868, C8B890, 30A828, 287028
    ;  000000, 181818, 383840, 404048, 484850, 303040, 583048, 284848
    ;          181818, 583048, 785850, A08868, C8B890, 887848, 786838
    ;  F8F8F8, 402020, 502828, 683030, 984848, D08888, E8D0D0, F8F8F8
    ;          303030, 804040, C06868, E0E0E0, 404878, D0A830, 7070B8
    ;  F8F8F8, 402020, 502828, 683030, 984848, 683030, 984848, 000000
    ;          282828, 284068, 3070A0, 4898B0, C8B890, 583048, 000000
    ;  F8F8F8, 181818, 503048, 000000, 000000, 383868, A08868, A89878
    dw          $0C63,  $24CB,  $296F,  $3634,  $4AF9,  $39AD,  $316B
    dw  $7FFF,  $0C63,  $24CB,  $296F,  $3634,  $4AF9,  $3187,  $2525
    dw          $18C6,  $2D6B,  $5294,  $739C,  $252F,  $1ABA,  $29F5
    dw  $7FFF,  $0C63,  $2D4A,  $316B,  $39AD,  $14AA,  $296F,  $3187
    dw          $0C63,  $24CB,  $296F,  $3634,  $4AF9,  $16A6,  $15C5
    dw  $0000,  $0C63,  $20E7,  $2508,  $2929,  $20C6,  $24CB,  $2525
    dw          $0C63,  $24CB,  $296F,  $3634,  $4AF9,  $25F1,  $1DAF
    dw  $7FFF,  $1088,  $14AA,  $18CD,  $2533,  $463A,  $6B5D,  $7FFF
    dw          $18C6,  $2110,  $35B8,  $739C,  $3D28,  $1ABA,  $5DCE
    dw  $7FFF,  $1088,  $14AA,  $18CD,  $2533,  $18CD,  $2533,  $0000
    dw          $14A5,  $3505,  $51C6,  $5A69,  $4AF9,  $24CB,  $0000
    dw  $7FFF,  $0C63,  $24CA,  $0000,  $0000,  $34E7,  $3634,  $3E75

    ; $0DE10C
    .dungeon_0E
    ;          181818, 483028, 686040, 989878, C8C8A8, 705020, 707020
    ;  F8F8F8, 181818, 483028, 686040, 989878, C8C8A8, 705020, 707020
    ;          203028, 585858, A0A0A0, E8E8E8, 904848, D8B028, C87848
    ;  F8F8F8, 181818, 483828, 604030, 684838, 483828, 584820, 483020
    ;          181818, 503030, 807020, 18A028, F8A828, 6850F8, D81818
    ;  F8F8F8, 181818, 303020, 403828, 484030, 303020, 584820, 483020
    ;          181818, 502838, 804820, 988050, 682020, F8F8F8, 603848
    ;  F8F8F8, 181818, 682020, 985050, C08080, F8C0C0, 584820, 483020
    ;          202020, A83838, D86868, E0E0E0, 484868, D8B028, 6868B0
    ;  F8F8F8, 181818, 303020, 403828, 484030, 604030, A0A0A0, E0E0E0
    ;          181818, 804020, B87830, E8B848, 4848F8, D83030, 18A028
    ;  F8F8F8, 181818, 483028, 000000, 682020, 682020, 204020, 204020
    dw          $0C63,  $14C9,  $218D,  $3E73,  $5739,  $114E,  $11CE
    dw  $7FFF,  $0C63,  $14C9,  $218D,  $3E73,  $5739,  $114E,  $11CE
    dw          $14C4,  $2D6B,  $5294,  $77BD,  $2532,  $16DB,  $25F9
    dw  $7FFF,  $0C63,  $14E9,  $190C,  $1D2D,  $14E9,  $112B,  $10C9
    dw          $0C63,  $18CA,  $11D0,  $1683,  $16BF,  $7D4D,  $0C7B
    dw  $7FFF,  $0C63,  $10C6,  $14E8,  $1909,  $10C6,  $112B,  $10C9
    dw          $0C63,  $1CAA,  $1130,  $2A13,  $108D,  $7FFF,  $24EC
    dw  $7FFF,  $0C63,  $108D,  $2953,  $4218,  $631F,  $112B,  $10C9
    dw          $1084,  $1CF5,  $35BB,  $739C,  $3529,  $16DB,  $59AD
    dw  $7FFF,  $0C63,  $10C6,  $14E8,  $1909,  $190C,  $5294,  $739C
    dw          $0C63,  $1110,  $19F7,  $26FD,  $7D29,  $18DB,  $1683
    dw  $7FFF,  $0C63,  $14C9,  $0000,  $108D,  $108D,  $1104,  $1104

    ; $0DE1C0
    .dungeon_0F
    ;          202020, 503848, 784848, 987070, D09898, B0B078, 585828
    ;  F8F8F8, 202020, 503848, 784848, 987070, D09898, B0B078, 585828
    ;          203028, 585858, A0A0A0, E8E8E8, 904848, D8B028, C87848
    ;  F8F8F8, 202020, 604040, 704848, 805050, 306030, 906058, 585828
    ;          202020, 503848, 784848, 987070, E0E0F8, 6060F8, 2828C8
    ;  F8F8F8, 202040, 404070, 505078, 606088, 306030, 906058, 585828
    ;          202020, 604838, 807840, A09860, D83838, E0E0F8, 484898
    ;  F8F8F8, 202020, 0068D8, 00D8F8, A09860, F8F8F8, F87878, D83838
    ;          202020, A89820, 484890, E0E0E0, 284028, F87878, D83838
    ;  F8F8F8, 202020, 483050, 584060, 605068, 306030, 906058, 585828
    ;          202020, 886058, 584050, D8A040, 406820, D83838, 981010
    ;  F8F8F8, 202020, 486068, 004800, 386838, 306030, 183018, 183018
    dw          $1084,  $24EA,  $252F,  $39D3,  $4E7A,  $3ED6,  $156B
    dw  $7FFF,  $1084,  $24EA,  $252F,  $39D3,  $4E7A,  $3ED6,  $156B
    dw          $14C4,  $2D6B,  $5294,  $77BD,  $2532,  $16DB,  $25F9
    dw  $7FFF,  $1084,  $210C,  $252E,  $2950,  $1986,  $2D92,  $156B
    dw          $1084,  $24EA,  $252F,  $39D3,  $7F9C,  $7D8C,  $64A5
    dw  $7FFF,  $2084,  $3908,  $3D4A,  $458C,  $1986,  $2D92,  $156B
    dw          $1084,  $1D2C,  $21F0,  $3274,  $1CFB,  $7F9C,  $4D29
    dw  $7FFF,  $1084,  $6DA0,  $7F60,  $3274,  $7FFF,  $3DFF,  $1CFB
    dw          $1084,  $1275,  $4929,  $739C,  $1505,  $3DFF,  $1CFB
    dw  $7FFF,  $1084,  $28C9,  $310B,  $354C,  $1986,  $2D92,  $156B
    dw          $1084,  $2D91,  $290B,  $229B,  $11A8,  $1CFB,  $0853
    dw  $7FFF,  $1084,  $3589,  $0120,  $1DA7,  $1986,  $0CC3,  $0CC3

    ; $0DE274
    .dungeon_10
    ;          282818, 483820, 705838, A09058, D8C880, 88A888, 608060
    ;  F8F8F8, 282818, 583820, 705838, A09058, C8C878, 385038, 283028
    ;          203028, 585858, A0A0A0, E8E8E8, 904848, D8B028, C87848
    ;  F8F8F8, 202020, 404058, 505068, 606070, F8F8F8, 705838, 385038
    ;          282818, 483820, 705838, A09058, D8C880, C89038, A85028
    ;  F8F8F8, 181818, 604838, 886038, 907040, 283848, 584020, 283028
    ;          282818, 304830, 507050, 80A080, D0D0B0, A09058, 705838
    ;  F8F8F8, 383820, 583820, 705838, A09058, B8B880, E8E8B8, F8F8F8
    ;          202020, A83838, D86868, E0E0E0, 484868, D8B028, 6868B0
    ;  F8F8F8, 181818, 282848, 303050, 303050, 404058, A0A0A0, E0E0E0
    ;          202020, 684040, 886060, C09898, F8F0E8, 705838, A09058
    ;  F8F8F8, 202018, 503020, 000000, 000000, 883838, A09058, 888058
    dw          $0CA5,  $10E9,  $1D6E,  $2E54,  $433B,  $46B1,  $320C
    dw  $7FFF,  $0CA5,  $10EB,  $1D6E,  $2E54,  $3F39,  $1D47,  $14C5
    dw          $14C4,  $2D6B,  $5294,  $77BD,  $2532,  $16DB,  $25F9
    dw  $7FFF,  $1084,  $2D08,  $354A,  $398C,  $7FFF,  $1D6E,  $1D47
    dw          $0CA5,  $10E9,  $1D6E,  $2E54,  $433B,  $1E59,  $1555
    dw  $7FFF,  $0C63,  $1D2C,  $1D91,  $21D2,  $24E5,  $110B,  $14C5
    dw          $0CA5,  $1926,  $29CA,  $4290,  $5B5A,  $2E54,  $1D6E
    dw  $7FFF,  $10E7,  $10EB,  $1D6E,  $2E54,  $42F7,  $5FBD,  $7FFF
    dw          $1084,  $1CF5,  $35BB,  $739C,  $3529,  $16DB,  $59AD
    dw  $7FFF,  $0C63,  $24A5,  $28C6,  $28C6,  $2D08,  $5294,  $739C
    dw          $1084,  $210D,  $3191,  $4E78,  $77DF,  $1D6E,  $2E54
    dw  $7FFF,  $0C84,  $10CA,  $0000,  $0000,  $1CF1,  $2E54,  $2E11

    ; $0DE328
    .dungeon_11
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE

    ; $0DE3DC
    .dungeon_12
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;  000000, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8, F0F0E8
    ;          282828, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 282828, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;          000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw  $0000,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE,  $77DE
    dw          $14A5,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $14A5,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw          $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F

    ; $0DE490
    .dungeon_13
    ;          000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 282828, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;          282828, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;          000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 282828, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;          000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;          000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;          000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    ;  000000, 000000, 700070, C000C0, F800F8, F868F8, F898F8, F8C8F8
    dw          $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $14A5,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw          $14A5,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw          $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $14A5,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw          $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw          $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw          $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F
    dw  $0000,  $0000,  $380E,  $6018,  $7C1F,  $7DBF,  $7E7F,  $7F3F

    ; ===============================================================
    ; Palace Map BG palettes
    ; ===============================================================

    ; $0DE544
    .dungeonmap_bg_00
    ;  000000, 3878E0, 3878E0, 3878E0, 3878E0, 3878E0, A8A8F8, 383838
    ;  000000, F8F8F8, E8A800, 688898, 98B8C8, C8E0F8, 688898, C8E0F8
    ;  000000, 003868, 003868, 003868, 003868, 003868, A8A8F8, 383838
    ;  000000, F8F8F8, 385898, F07800, E8A800, F0D878, 98B8C8, C8E0F8
    ;  000000, 3878E0, F8D070, 3878E0, 3878E0, 3878E0, A8A8F8, 383838
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
    ;  000000, 3878E0, 3878E0, F87858, F8D070, 3878E0, A8A8F8, 383838
    ;  000000, F8F8F8, 385898, 688898, 98B8C8, C8E0F8, E8A800, F0D878
    ;  000000, 481800, 582808, 704018, 905028, A06838, A08048, A89050
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
    ;  000000, 003070, 104080, 205090, 3060A0, 4070B0, 5080C0, 6090D0
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $71E7,  $71E7,  $71E7,  $71E7,  $71E7,  $7EB5,  $1CE7
    dw  $0000,  $7FFF,  $02BD,  $4E2D,  $66F3,  $7F99,  $4E2D,  $7F99
    dw  $0000,  $34E0,  $34E0,  $34E0,  $34E0,  $34E0,  $7EB5,  $1CE7
    dw  $0000,  $7FFF,  $4D67,  $01FE,  $02BD,  $3F7E,  $66F3,  $7F99
    dw  $0000,  $71E7,  $3B5F,  $71E7,  $71E7,  $71E7,  $7EB5,  $1CE7
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000
    dw  $0000,  $71E7,  $71E7,  $2DFF,  $3B5F,  $71E7,  $7EB5,  $1CE7
    dw  $0000,  $7FFF,  $4D67,  $4E2D,  $66F3,  $7F99,  $02BD,  $3F7E
    dw  $0000,  $0069,  $04AB,  $0D0E,  $1552,  $1DB4,  $2614,  $2A55
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000
    dw  $0000,  $38C0,  $4102,  $4944,  $5186,  $59C8,  $620A,  $6A4C
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; ===============================================================
    ; Overworld Auxiliary 3 palettes
    ; ===============================================================

    ; $0DE604
    .owanim_00
    ;  504030, 485068, 607888, 8090D8, 686048, 908870, D0C8B8
    dw  $190A,  $3549,  $45EC,  $6E50,  $258D,  $3A32,  $5F3A

    ; $0DE612
    .owanim_01
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE620
    .owanim_02
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE62E
    .owanim_03
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE63C
    .owanim_04
    ;  202020, 700000, C81020, F84050, 403838, 101010, 484040
    dw  $1084,  $000E,  $1059,  $291F,  $1CE8,  $0842,  $2109

    ; $0DE64A
    .owanim_05
    ;  181818, 282880, 3858B8, 70A8F8, C0C0F8, 787030, E0D0F0
    dw  $0C63,  $40A5,  $5D67,  $7EAE,  $7F18,  $19CF,  $7B5C

    ; $0DE658
    .owanim_06
    ;  203010, 201000, 005028, 308860, 503020, 006030, 806038
    dw  $08C4,  $0044,  $1540,  $3226,  $10CA,  $1980,  $1D90

    ; $0DE666
    .owanim_07
    ;  282828, 304878, 3860A8, 70B0F0, 483828, 5880C0, 786038
    dw  $14A5,  $3D26,  $5587,  $7ACE,  $14E9,  $620B,  $1D8F

    ; $0DE674
    .owanim_08
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE682
    .owanim_09
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE690
    .owanim_0A
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE69E
    .owanim_0B
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE6AC
    .owanim_0C
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; $0DE6BA
    .owanim_0D
    ;  000000, 000000, 000000, 000000, 000000, 000000, 000000
    dw  $0000,  $0000,  $0000,  $0000,  $0000,  $0000,  $0000

    ; ===============================================================
    ; Main Overworld Palettes
    ; ===============================================================

    ; $0DE6C8
    .owmain_00
    ;  282828, 483828, 604828, 786038, 307030, 489848, 887848
    ;  282828, 483828, 604828, 786038, 686028, 888040, 887848
    ;  282828, 483828, 604828, 786038, 604828, 887848, 887848
    ;  282828, 508070, 78B890, B0E8B8, 285828, 489848, 30D030
    ;  282828, 605030, 887048, A08860, 287838, 489848, 408848
    dw  $14A5,  $14E9,  $152C,  $1D8F,  $19C6,  $2669,  $25F1
    dw  $14A5,  $14E9,  $152C,  $1D8F,  $158D,  $2211,  $25F1
    dw  $14A5,  $14E9,  $152C,  $1D8F,  $152C,  $25F1,  $25F1
    dw  $14A5,  $3A0A,  $4AEF,  $5FB6,  $1565,  $2669,  $1B46
    dw  $14A5,  $194C,  $25D1,  $3234,  $1DE5,  $2669,  $2628

    ; $0DE70E
    .owmain_01
    ;  181818, 382018, 503020, 684820, 606030, 908850, 806038
    ;  181818, 382818, 503020, 684820, 705830, 907850, 806038
    ;  181818, 382818, 503020, 684820, 684820, 806038, 806038
    ;  203010, 487040, 709868, A0C898, 606030, 908850, A09860
    ;  203010, 886898, 98B0E0, B8A820, 606030, 908850, 787038
    dw  $0C63,  $0C87,  $10CA,  $112D,  $198C,  $2A32,  $1D90
    dw  $0C63,  $0CA7,  $10CA,  $112D,  $196E,  $29F2,  $1D90
    dw  $0C63,  $0CA7,  $10CA,  $112D,  $112D,  $1D90,  $1D90
    dw  $08C4,  $21C9,  $366E,  $4F34,  $198C,  $2A32,  $3274
    dw  $08C4,  $4DB1,  $72D3,  $12B7,  $198C,  $2A32,  $1DCF

    ; $0DE754
    .owmain_02
    ;  181818, 382018, 503020, 684820, 686028, 787030, 806038
    ;  181818, 382018, 503020, 684820, B0E8D8, 805040, F8F8F8
    ;  181818, 382018, 503020, 684820, 684820, 806038, 806038
    ;  303828, 508070, 78B890, B0F0B8, 686028, 787030, F868F8
    ;  282828, 605020, 887038, A88858, 686028, 787030, 806038
    dw  $0C63,  $0C87,  $10CA,  $112D,  $158D,  $19CF,  $1D90
    dw  $0C63,  $0C87,  $10CA,  $112D,  $6FB6,  $2150,  $7FFF
    dw  $0C63,  $0C87,  $10CA,  $112D,  $112D,  $1D90,  $1D90
    dw  $14E6,  $3A0A,  $4AEF,  $5FD6,  $158D,  $19CF,  $7DBF
    dw  $14A5,  $114C,  $1DD1,  $2E35,  $158D,  $19CF,  $1D90

    ; $0DE79A
    .owmain_03
    ;  202010, 383018, 504028, 685028, 504028, 605038, 786840
    ;  202010, 383018, 484028, 605830, A87880, 101010, D0A0A8
    ;  202010, 383018, 484028, 605830, 484028, 786840, 786840
    ;  202020, 487040, 709868, A0C898, 504028, 605038, 706048
    ;  202020, 886898, 98B0E0, B8A820, 483820, 605038, 504028
    dw  $0884,  $0CC7,  $150A,  $154D,  $150A,  $1D4C,  $21AF
    dw  $0884,  $0CC7,  $1509,  $196C,  $41F5,  $0842,  $569A
    dw  $0884,  $0CC7,  $1509,  $196C,  $1509,  $21AF,  $21AF
    dw  $1084,  $21C9,  $366E,  $4F34,  $150A,  $1D4C,  $258E
    dw  $1084,  $4DB1,  $72D3,  $12B7,  $10E9,  $1D4C,  $150A

    ; $0DE7E0
    .owmain_04
    ;  202000, 282800, 383800, 403800, 585000, 684000, C04000
    ;  002800, 004000, 105010, 186018, 206820, 606048, 404030
    ;  303848, 101828, 202838, 384050, 683038, 784048, 703840
    ;  586070, 485060, 304050, 303848, 202828, 606048, 404030
    ;  202020, 404030, 606048, 989880, B8B8A0, 582030, 904828
    dw  $0084,  $00A5,  $00E7,  $00E8,  $014B,  $010D,  $0118
    dw  $00A0,  $0100,  $0942,  $0D83,  $11A4,  $258C,  $1908
    dw  $24E6,  $1462,  $1CA4,  $2907,  $1CCD,  $250F,  $20EE
    dw  $398B,  $3149,  $2906,  $24E6,  $14A4,  $258C,  $1908
    dw  $1084,  $1908,  $258C,  $4273,  $52F7,  $188B,  $1532

    ; $0DE826
    .owmain_05
    ;  6060B8, 5060A8, 98A8E8, A0B8F0, 184818, 207020, 38A040
    ;  404090, 5060A8, 98A8E8, A0B8F0, 182858, 206068, 488078
    ;  7880D0, 8090D8, 8898D8, 98A8E8, 5060A8, 7078D0, B8C0F0
    ;  504030, 485068, 607888, 8090D8, 686048, 908870, D0C8B8
    ;  202020, 404030, 606048, 989880, B8B8A0, 582030, 904828
    dw  $5D8C,  $558A,  $76B3,  $7AF4,  $0D23,  $11C4,  $2287
    dw  $4908,  $558A,  $76B3,  $7AF4,  $2CA3,  $3584,  $3E09
    dw  $6A0F,  $6E50,  $6E71,  $76B3,  $558A,  $69EE,  $7B17
    dw  $190A,  $3549,  $45EC,  $6E50,  $258D,  $3A32,  $5F3A
    dw  $1084,  $1908,  $258C,  $4273,  $52F7,  $188B,  $1532

    ; ===============================================================
    ; Overworld Auxiliary Palettes (pool of palettes for aux 1 and aux 2)
    ; ===============================================================

    ; $0DE86C
    .owaux_00
    ; #RRGGBB :  283028, 705840, 987850, B89868, 683838, 905050, B8B088
    ; #RRGGBB :  283028, 508070, 78B890, B0E8B8, D0F0D0, 307030, 489848
    ; #RRGGBB :  282828, 605030, 887040, A89060, 286840, 407840, 285830
    dw  $14C5,  $216E,  $29F3,  $3677,  $1CED,  $2952,  $46D7
    dw  $14C5,  $3A0A,  $4AEF,  $5FB6,  $6BDA,  $19C6,  $2669
    dw  $14A5,  $194C,  $21D1,  $3255,  $21A5,  $21E8,  $1965

    ; $0DE896
    .owaux_01
    ; #RRGGBB :  282828, 805868, B888A0, E0C0D0, 989840, 586090, 8090C0
    ; #RRGGBB :  282828, 605030, 887040, 285830, 905050, 307030, 703838
    ; #RRGGBB :  282828, 887050, C0B098, E8E8E8, 385030, 688060, 307030
    dw  $14A5,  $3570,  $5237,  $6B1C,  $2273,  $498B,  $6250
    dw  $14A5,  $194C,  $21D1,  $1965,  $2952,  $19C6,  $1CEE
    dw  $14A5,  $29D1,  $4ED8,  $77BD,  $1947,  $320D,  $19C6

    ; $0DE8C0
    .owaux_02
    ; #RRGGBB :  282828, 886038, C88038, E8A848, F8D0D0, B85858, D88090
    ; #RRGGBB :  282828, F8F8F8, 206878, 888888, 883838, F8F8F8, F8F8F8
    ; #RRGGBB :  383028, 787058, A09878, E0D0C0, 307030, 489848, F8F8F0
    dw  $14A5,  $1D91,  $1E19,  $26BD,  $6B5F,  $2D77,  $4A1B
    dw  $14A5,  $7FFF,  $3DA4,  $4631,  $1CF1,  $7FFF,  $7FFF
    dw  $14C7,  $2DCF,  $3E74,  $635C,  $19C6,  $2669,  $7BFF

    ; $0DE8EA
    .owaux_03
    ; #RRGGBB :  98C0F8, A8D0F8, C8F0F8, E8F8F8, 407060, 000000, 80B0F8
    ; #RRGGBB :  701008, 480000, E03818, F8F0C0, 989898, F88860, A81818
    ; #RRGGBB :  F8F8F8, 787878, 282828, 282828, 000000, C0C0C0, 989898
    dw  $7F13,  $7F55,  $7FD9,  $7FFD,  $31C8,  $0000,  $7ED0
    dw  $044E,  $0009,  $0CFC,  $63DF,  $4E73,  $323F,  $0C75
    dw  $7FFF,  $3DEF,  $14A5,  $14A5,  $0000,  $6318,  $4E73

    ; $0DE914
    .owaux_04
    ; #RRGGBB :  303030, 786038, 5880C0, C0E0D0, 387838, 489848, 887848
    ; #RRGGBB :  303030, 3860A0, B08838, F0E078, 387838, 489848, 5880C0
    ; #RRGGBB :  282828, 483828, 604828, 786038, 307030, 489848, 887848
    dw  $18C6,  $1D8F,  $620B,  $6B98,  $1DE7,  $2669,  $25F1
    dw  $18C6,  $5187,  $1E36,  $3F9E,  $1DE7,  $2669,  $620B
    dw  $14A5,  $14E9,  $152C,  $1D8F,  $19C6,  $2669,  $25F1

    ; $0DE93E
    .owaux_05
    ; #RRGGBB :  202010, 504808, 787840, A8A870, C8C890, 605038, 602830
    ; #RRGGBB :  202010, 504808, 787840, A8A870, C8C890, 605038, 602830
    ; #RRGGBB :  202010, 404028, 605830, 786840, A87880, 605038, D0A0A8
    dw  $0884,  $052A,  $21EF,  $3AB5,  $4B39,  $1D4C,  $18AC
    dw  $0884,  $052A,  $21EF,  $3AB5,  $4B39,  $1D4C,  $18AC
    dw  $0884,  $1508,  $196C,  $21AF,  $41F5,  $1D4C,  $569A

    ; $0DE968
    .owaux_06
    ; #RRGGBB :  103070, 1840B0, 3868E8, 58B8F8, 90E8F8, 787030, 181818
    ; #RRGGBB :  181818, 584828, 908050, C0B070, 501828, 806038, 483828
    ; #RRGGBB :  181818, 604838, 805040, B09848, B0E8D8, 787030, F8F8F8
    dw  $38C2,  $5903,  $75A7,  $7EEB,  $7FB2,  $19CF,  $0C63
    dw  $0C63,  $152B,  $2A12,  $3AD8,  $146A,  $1D90,  $14E9
    dw  $0C63,  $1D2C,  $2150,  $2676,  $6FB6,  $19CF,  $7FFF

    ; $0DE992
    .owaux_07
    ; #RRGGBB :  181818, 382018, 503020, 684820, 686028, 787030, 806038
    ; #RRGGBB :  181818, 382018, 503020, 684820, B0E8D8, F8F8F8, 806038
    ; #RRGGBB :  181818, 306060, 307070, 887058, C0C0F8, 509860, E0D0F0
    dw  $0C63,  $0C87,  $10CA,  $112D,  $158D,  $19CF,  $1D90
    dw  $0C63,  $0C87,  $10CA,  $112D,  $6FB6,  $7FFF,  $1D90
    dw  $0C63,  $3186,  $39C6,  $2DD1,  $7F18,  $326A,  $7B5C

    ; $0DE9BC
    .owaux_08
    ; #RRGGBB :  282828, 508070, 78B890, A0E0A8, 307030, 988870, B0A888
    ; #RRGGBB :  282828, 685838, 887858, F8F8F8, 286840, B87890, A06068
    ; #RRGGBB :  282828, 705840, 987850, B89868, 284860, 406888, B8B088
    dw  $14A5,  $3A0A,  $4AEF,  $5794,  $19C6,  $3A33,  $46B6
    dw  $14A5,  $1D6D,  $2DF1,  $7FFF,  $21A5,  $49F7,  $3594
    dw  $14A5,  $216E,  $29F3,  $3677,  $3125,  $45A8,  $46D7

    ; $0DE9E6
    .owaux_09
    ; #RRGGBB :  282828, 586848, 889860, B8C088, 304830, 483828, 887848
    ; #RRGGBB :  282828, 605030, 887040, 888040, 989030, 989040, 706828
    ; #RRGGBB :  282828, 586848, 889860, B8C088, D0D0B8, 706830, 888040
    dw  $14A5,  $25AB,  $3271,  $4717,  $1926,  $14E9,  $25F1
    dw  $14A5,  $194C,  $21D1,  $2211,  $1A53,  $2253,  $15AE
    dw  $14A5,  $25AB,  $3271,  $4717,  $5F5A,  $19AE,  $2211

    ; $0DEA10
    .owaux_0A
    ; #RRGGBB :  000050, 001070, 082888, 2040A0, 6060C8, 6080D0, 489848
    ; #RRGGBB :  383838, 588060, 98B888, C8E0A0, F0F8D0, 406880, 489848
    ; #RRGGBB :  284028, 605020, 489848, 206830, 288048, 289860, 40B068
    dw  $2800,  $3840,  $44A1,  $5104,  $658C,  $6A0C,  $2669
    dw  $1CE7,  $320B,  $46F3,  $5399,  $6BFE,  $41A8,  $2669
    dw  $1505,  $114C,  $2669,  $19A4,  $2605,  $3265,  $36C8

    ; $0DEA3A
    .owaux_0B
    ; #RRGGBB :  403800, B0C860, 706050, A09088, 88A850, 587828, A8B870
    ; #RRGGBB :  202010, 503808, 685020, 887040, B08020, D0B038, 805000
    ; #RRGGBB :  202010, 584818, 887830, B8A878, E8E8B0, 705830, 907850
    dw  $00E8,  $3336,  $298E,  $4654,  $2AB1,  $15EB,  $3AF5
    dw  $0884,  $04EA,  $114D,  $21D1,  $1216,  $1EDA,  $0150
    dw  $0884,  $0D2B,  $19F1,  $3EB7,  $5BBD,  $196E,  $29F2

    ; $0DEA64
    .owaux_0C
    ; #RRGGBB :  000000, 080810, 181820, 282830, 383858, 484868, 585890
    ; #RRGGBB :  382818, 705050, A08088, D0B8B8, 686838, F8F8F8, A8B870
    ; #RRGGBB :  202010, 606040, 909058, A8B870, 607038, 809058, 484820
    dw  $0000,  $0821,  $1063,  $18A5,  $2CE7,  $3529,  $496B
    dw  $0CA7,  $294E,  $4614,  $5EFA,  $1DAD,  $7FFF,  $3AF5
    dw  $0884,  $218C,  $2E52,  $3AF5,  $1DCC,  $2E50,  $1129

    ; $0DEA8E
    .owaux_0D
    ; #RRGGBB :  204048, 405858, 607880, 609898, 80B0B0, 006030, A8D8D8
    ; #RRGGBB :  202010, 006030, 505818, 788830, C8C060, A87810, E0A858
    ; #RRGGBB :  202010, 005028, 003020, 807838, 705830, 907850, 006030
    dw  $2504,  $2D68,  $41EC,  $4E6C,  $5AD0,  $1980,  $6F75
    dw  $0884,  $1980,  $0D6A,  $1A2F,  $3319,  $09F5,  $2EBC
    dw  $0884,  $1540,  $10C0,  $1DF0,  $196E,  $29F2,  $1980

    ; $0DEAB8
    .owaux_0E
    ; #RRGGBB :  181818, 684820, 006030, 108050, 606030, 908850, 806038
    ; #RRGGBB :  181818, 005028, F8F8F8, F8F8F8, 606030, 908850, 006030
    ; #RRGGBB :  181818, 382018, 503020, 684820, 606030, 908850, 806038
    dw  $0C63,  $112D,  $1980,  $2A02,  $198C,  $2A32,  $1D90
    dw  $0C63,  $1540,  $7FFF,  $7FFF,  $198C,  $2A32,  $1980
    dw  $0C63,  $0C87,  $10CA,  $112D,  $198C,  $2A32,  $1D90

    ; $0DEAE2
    .owaux_0F
    ; #RRGGBB :  403828, 806838, A89858, D0C078, F8F8F8, C0C088, D0D098
    ; #RRGGBB :  202010, 503808, 685020, 887040, B87060, D89888, 985048
    ; #RRGGBB :  303020, 906848, B89060, D8B070, A06058, C08070, E0A898
    dw  $14E8,  $1DB0,  $2E75,  $3F1A,  $7FFF,  $4718,  $4F5A
    dw  $0884,  $04EA,  $114D,  $21D1,  $31D7,  $467B,  $2553
    dw  $10C6,  $25B2,  $3257,  $3ADB,  $2D94,  $3A18,  $4EBC

    ; $0DEB0C
    .owaux_10
    ; #RRGGBB :  181818, 906848, B89060, D8B868, 405050, 605870, 808090
    ; #RRGGBB :  303828, 487040, 709868, A0C898, C0E8B8, 606030, 908850
    ; #RRGGBB :  202010, 503808, 685020, 887040, 606830, 788848, 385838
    dw  $0C63,  $25B2,  $3257,  $36FB,  $2948,  $396C,  $4A10
    dw  $14E6,  $21C9,  $366E,  $4F34,  $5FB8,  $198C,  $2A32
    dw  $0884,  $04EA,  $114D,  $21D1,  $19AC,  $262F,  $1D67

    ; $0DEB36
    .owaux_11
    ; #RRGGBB :  702028, A04030, C87040, F8B860, 080018, 080018, 500030
    ; #RRGGBB :  202010, 503808, 685020, 887040, 706090, 9880B0, 504878
    ; #RRGGBB :  202010, 705818, 987830, B09048, B8A058, 604020, 503000
    dw  $148E,  $1914,  $21D9,  $32FF,  $0C01,  $0C01,  $180A
    dw  $0884,  $04EA,  $114D,  $21D1,  $498E,  $5A13,  $3D2A
    dw  $0884,  $0D6E,  $19F3,  $2656,  $2E97,  $110C,  $00CA

    ; $0DEB60
    .owaux_12
    ; #RRGGBB :  202010, 484008, 585820, 888850, A8A870, 605038, 807000
    ; #RRGGBB :  202010, 383018, 504028, 685028, F8F8B0, D0A0A8, 786840
    ; #RRGGBB :  101010, 101010, 181818, 481010, 403838, 181818, 484040
    dw  $0884,  $0509,  $116B,  $2A31,  $3AB5,  $1D4C,  $01D0
    dw  $0884,  $0CC7,  $150A,  $154D,  $5BFF,  $569A,  $21AF
    dw  $0842,  $0842,  $0C63,  $0849,  $1CE8,  $0C63,  $2109

    ; $0DEB8A
    .owaux_13
    ; #RRGGBB :  202020, 380008, 501820, 703008, 905028, 284830, 403818
    ; #RRGGBB :  202010, 583038, 707038, A0A068, C0C088, 605038, 602830
    ; #RRGGBB :  202010, 404028, 605830, 786840, A87880, 605038, D0A0A8
    dw  $1084,  $0407,  $106A,  $04CE,  $1552,  $1925,  $0CE8
    dw  $0884,  $1CCB,  $1DCE,  $3694,  $4718,  $1D4C,  $18AC
    dw  $0884,  $1508,  $196C,  $21AF,  $41F5,  $1D4C,  $569A
}

; ==============================================================================

; $0DEBB4-$0DEBB8 DATA
SwordPaletteOffsets:
{
    db (PaletteData_sword_00-PaletteData_sword) ; $00
    db (PaletteData_sword_00-PaletteData_sword) ; $00
    db (PaletteData_sword_01-PaletteData_sword) ; $06
    db (PaletteData_sword_02-PaletteData_sword) ; $0C
    db (PaletteData_sword_03-PaletteData_sword) ; $12
}
    
; $0DEBB9-$0DEBC0 DATA
{
    db $18, $1E, $24, $2A, $30, $36, $3C, $42
}
    
; $0DEBC1-$0DEBC5 DATA
ShieldPaletteOffsets:
{
    db (PaletteData_shield_00-PaletteData_shield) ; $00
    db (PaletteData_shield_00-PaletteData_shield) ; $00
    db (PaletteData_shield_01-PaletteData_shield) ; $08
    db (PaletteData_shield_02-PaletteData_shield) ; $10
    db $18
}
    
; $0DEBC6-$0DEBD5 DATA
PaletteIDtoOffset:
{
    db $00 ; 0x00*14
    db $0E ; 0x01*14
    db $1C ; 0x02*14
    db $2A ; 0x03*14
    db $38 ; 0x04*14
    db $46 ; 0x05*14
    db $54 ; 0x06*14
    db $62 ; 0x07*14
    db $70 ; 0x08*14
    db $7E ; 0x09*14
    db $8C ; 0x0A*14
    db $9A ; 0x0B*14
    db $A8 ; 0x0C*14
    db $B6 ; 0x0D*14
    db $C4 ; 0x0E*14
    db $D2 ; 0x0F*14
}
    
; $0DEC06-$0DEC04 DATA
PaletteIDtoOffset_16bit:
{
    ; $0DEC06
    dw $0000 ; 0x00*14
    dw $000E ; 0x01*14
    dw $001C ; 0x02*14
    dw $002A ; 0x03*14
    dw $0038 ; 0x04*14
    dw $0046 ; 0x05*14
    dw $0054 ; 0x06*14
    dw $0062 ; 0x07*14
    dw $0070 ; 0x08*14
    dw $007E ; 0x09*14
    dw $008C ; 0x0A*14
    dw $009A ; 0x0B*14
    dw $00A8 ; 0x0C*14
    dw $00B6 ; 0x0D*14

    ; $0DEBF2
    .agah
    dw $00C4 ; 0x0E*14
    dw $00D2 ; 0x0F*14
    dw $00E0 ; 0x10*14
    dw $00EE ; 0x11*14
    dw $00FC ; 0x12*14
    dw $010A ; 0x13*14
    dw $0118 ; 0x14*14
    dw $0126 ; 0x15*14
    dw $0134 ; 0x16*14
    dw $0142 ; 0x17*14
}

; $0DEC05-$0DEC0A DATA
LinkMailPalettesOffsets:
{
    db (Palettes_GreenMail-PaletteData_Link)/2 ; $00
    db (Palettes_BlueMail-PaletteData_Link)/2  ; $0F
    db (Palettes_RedMail-PaletteData_Link)/2   ; $1E
    db (Palettes_Bunny-PaletteData_Link)/2     ; $2D
    db (Palettes_Zap-PaletteData_Link)/2       ; $3C
}
    
; $0DEC0B-$0DEC12 DATA
UnusedPaletteOffsets:
{
    db $00, $1C, $38, $54, $70, $8C, $A8, $C4
}
    
; $0DEC13-$0DEC3A DATA
PaletteIDtoOffset_OW:
{
    dw $0000 ; 0x00*42
    dw $002A ; 0x01*42
    dw $0054 ; 0x02*42
    dw $007E ; 0x03*42
    dw $00A8 ; 0x04*42
    dw $00D2 ; 0x05*42
    dw $00FC ; 0x06*42
    dw $0126 ; 0x07*42
    dw $0150 ; 0x08*42
    dw $017A ; 0x09*42
    dw $01A4 ; 0x0A*42
    dw $01CE ; 0x0B*42
    dw $01F8 ; 0x0C*42
    dw $0222 ; 0x0D*42
    dw $024C ; 0x0E*42
    dw $0276 ; 0x0F*42
    dw $02A0 ; 0x10*42
    dw $02CA ; 0x11*42
    dw $02F4 ; 0x12*42
    dw $031E ; 0x13*42
}
    
; $0DEC3B-$0DEC46 DATA
PaletteIDtoOffset_OW2:
{
    dw $0000 ; 0x00*70
    dw $0046 ; 0x01*70
    dw $008C ; 0x02*70
    dw $00D2 ; 0x03*70
    dw $0118 ; 0x04*70
    dw $015E ; 0x05*70
}
    
; $0DEC47-$0DEC4A DATA
PaletteIDtoOffset_HUD:
{
    db $00, $40, $00, $30
}
    
; $0DEC4B-$0DEC72 DATA
PaletteIDtoOffset_UW:
{
    dw $0000 ; $00*180 
    dw $00B4 ; $01*180 
    dw $0168 ; $02*180 
    dw $021C ; $03*180 
    dw $02D0 ; $04*180 
    dw $0384 ; $05*180 
    dw $0438 ; $06*180 
    dw $04EC ; $07*180 
    dw $05A0 ; $08*180 
    dw $0654 ; $09*180 
    dw $0708 ; $0A*180 
    dw $07BC ; $0B*180 
    dw $0870 ; $0C*180 
    dw $0924 ; $0D*180 
    dw $09D8 ; $0E*180 
    dw $0A8C ; $0F*180 
    dw $0B40 ; $10*180 
    dw $0BF4 ; $11*180 
    dw $0CA8 ; $12*180 
    dw $0D5C ; $13*180 
}
    
; $0DEC73-$0DEC76 DATA
PaletteWorldIDtoOffset:
{
    dw $0000 ; Light World
    dw $0078 ; Dark World
}

; ==============================================================================

; $0DEC77-$0DEC9D LONG JUMP LOCATION
Palette_SpriteAux3:
{
    REP #$21
    
    ; Palette 1
    LDX $0AAC
    
    LDA PaletteIDtoOffset, X : AND.w #$00FF : ADC.w #$D39E : STA $00
    
    REP #$10
    
    ; Target SP-0 (first half)
    LDA.w #$0102
    
    ; Depending on this flag, use different palette areas.
    LDX $0ABD : BEQ .useSP0
        ; Target SP-7 (first half) instead
        LDA.w #$01E2
    
    .useSP0
    
    ; Write a palette consisting of 7 colors to cgram buffer
    LDX.w #$0006
    
    JSR Palette_SingleLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DEC9E-$0DECC4 LONG JUMP LOCATION
Palette_MainSpr:
{
    ; Loads palettes for the commonly used sprites like fairys, blue / red creatures,
    ; hearts, rupees, etc
    REP #$21
    
    ; X = 0x00 for light world
    LDX.b #$00
    
    ; - ZS Custom Overworld? not sure, needs investigation.
    LDA $8A : AND.w #$0040 : BEQ .lightWorld
        ; X = 0x02 for dark world
        INX #2
    
    .lightWorld
    
    ; TODO: See if there is a way to reference the address directly here.
    ; #$D218 refers to the address of PaletteData.
    LDA PaletteWorldIDtoOffset, X : ADC.w #$D218 : STA $00
    
    REP #$10
    
    ; Target SP-1 through SP-4 (full), Each palette has 15 colors, Load 4 palettes    
    LDA.w #$0122
    LDX.w #$000E
    LDY.w #$0003
    
    JSR Palette_MultiLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DECC5-$0DECE3 LONG JUMP LOCATION
Palette_SpriteAux1:
{
    REP #$31
    
    ; Load sprite palette 2 value
    LDA $0AAD : AND.w #$00FF : ASL A : TAX
    
    ; TODO: See if there is a way to reference the address directly here.
    ; #$D4E0 is the address for PaletteData_spriteaux_00.
    LDA PaletteIDtoOffset, X : ADC.w #$D4E0 : STA $00
    
    LDA.w #$01A2 ; Target SP-5 (first half)
    LDX.w #$0006 ; Palette has 7 colors
    
    JSR Palette_SingleLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DECE4-$0DED02 LONG JUMP LOCATION
Palette_SpriteAux2:
{
    REP #$31
    
    ; Load sprite palette 3 value
    LDA $0AAE : AND.w #$00FF : ASL A : TAX
    
    ; TODO: See if there is a way to reference the address directly here.
    ; #$D4E0 is the address for PaletteData_spriteaux_00.
    LDA PaletteIDtoOffset, X : ADC.w #$D4E0 : STA $00
    
    LDA $01C2    ; Target SP-6 (first half)
    LDX.w #$0006 ; Palette has 7 colors
    
    JSR Palette_SingleLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DED03-$0DED28 LONG JUMP LOCATION
Palette_Sword:
{
    ; Load sword palette
    
    REP #$21
    
    ; Figure out what kind of sword Link has.
    LDA.l $7EF359 : AND.w #$00FF : TAX
    
    ; TODO: See if there is a way to reference the address directly here.
    ; #$D630 is the address for PaletteData_sword.
    LDA SwordPaletteOffsets, X : AND.w #$00FF : ADC.w #$D630 : STA $00
    
    REP #$10
    
    LDA.w #$01B2 ; Target SP-5 (second half)
    LDX.w #$0002 ; palette has 3 colors
    
    JSR Palette_ArbitraryLoad
    
    SEP #$30
    
    INC $15
    
    RTL
}

; ==============================================================================

; $0DED29-$0DED4E LONG JUMP LOCATION
Palette_Shield:
{
    ; Load shield palette
    
    REP #$21
    
    ; Figure out what kind of shield Link has.
    LDA.l $7EF35A : AND.w #$00FF : TAX
    
    LDA ShieldPaletteOffsets, X : AND.w #$00FF : ADC.w #$D648 : STA $00
    
    REP #$10
    
    ; Target SP-5 (second half), load 4 colors
    LDA.w #$01B8
    LDX.w #$0003
    
    JSR Palette_ArbitraryLoad
    
    SEP #$30
    
    ; Set the palette update flag
    INC $15
    
    RTL
}

; ==============================================================================

; $0DED4F-$0DED6D
Palette_Unused:
{
    ; This routine isn't referenced anywhere in the game... that i can tell...
    
    REP #$21
    
    LDX $0AB0
    
    LDA PaletteIDtoOffset, X : AND.w #$00FF : ADC.w #$D446 : STA $00
    
    REP #$10
    
    ; Target SP-6 (first half)
    LDA.w #$01C2
    LDX.w #$0006
    
    JSR Palette_SingleLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DED6E-$0DEDDC LONG JUMP LOCATION
Palette_MiscSpr:
{
    ; If we're outdoors do something else...
    LDA $1B : BEQ .outdoors
        ; $0DED72 ALTERNATE ENTRY POINT 
        .justSP6
        
        REP #$21
        
        LDX $0AB1
        
        LDA PaletteIDtoOffset, X : AND.w #$00FF
        
        ADC.w #$D446 : STA $00
        
        REP #$10
        
        LDA.w #$01D2  ; Target SP-6 (second half)
        LDX.w #$0006  ; Palette has 7 colors
        
        JSR Palette_SingleLoad
        
        SEP #$30
        
        RTL
    
    .outdoors
    
    ; This section loads the palette for thrown objects like bushes and rocks.
    REP #$21
    
    LDX.w #$07
    
    ; See if we're in the dark world.
    ; - ZS Custom Overworld? not sure, needs investigation.
    LDA $8A : AND.w #$0040 : BEQ .lightWorld
        INX #2
    
    .lightWorld
    
    PHX
    
    ; X = 0x07 or 0x09
    LDA PaletteIDtoOffset, X : AND.w #$00FF : ADC.w #$D446 : STA $00
    
    REP #$10
    
    ; Target SP-0 (second half)
    LDA.w #$0112
    
    ; Not sure but it's definitely palette related.
    LDX $0ABD : BEQ .useSP0
        LDA.w #$01F2 ; Target SP-7 (second half) instead
    
    .useSP0
    
    LDX.w #$0006 ; 7 color palette
    
    JSR Palette_SingleLoad
    
    SEP #$10
    
    PLX : DEX
    
    LDA PaletteIDtoOffset, X : AND.w #$00FF : CLC : ADC.w #$D446 : STA $00
    
    REP #$10
    
    LDA.w #$01D2 ; Target SP-6 (second half)
    LDX.w #$0006 ; 7 color palette
    
    JSR Palette_SingleLoad
    
    REP #$30
    
    RTL
}

; ==============================================================================

; $0DEDDD-$0DEDF4 LONG JUMP LOCATION
Palette_PalaceMapSpr:
{
    ; Load palettes for Palace Map sprite graphics.
    
    REP #$21
    
    ; Load palettes from $1BD70A
    LDA.w #$D70A : STA $00
    
    REP #$10
    
    ; Starting target palette is SP4, 7 colors each, load 3 palettes
    LDA.w #$0182
    LDX.w #$0006
    LDY.w #$0002
    
    JSR Palette_MultiLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DEDF5-$0DEDF8 DATA - Glove colors (other than skin colored)
Palettes_LinkGloveColors:
{
    dw $52F6, $0376
}
    
; $0DEDF9-$0DEE39 LONG JUMP LOCATION
; Palette_ChangeGloveColor:
Palette_ArmorAndGloves:
{
    ; Load armor palette
    
    REP #$21
    
    ; Check what Link's armor value is.
    LDA.l $7EF35B : AND.w #$00FF : TAX
    
    LDA PaletteIDtoOffset_16bit, X : AND.w #$00FF : ASL A : ADC.w #$D308 : STA $00
    
    REP #$10
    
    LDA.w #$01E2 ; Target SP-7 (sprite palette 6)
    LDX.w #$000E ; Palette has 15 colors
    
    JSR Palette_ArbitraryLoad
    
    ; $0DEE1B ALTERNATE ENTRY POINT
    .justGloves

    REP #$30
    
    ; Check what type of Gloves Link has.
    ; If Link has no special gloves I guess you use a default?
    LDA.l $7EF354 : AND.w #$00FF : BEQ .defaultGloveColor
        DEC A : ASL A : TAX
        
        LDA Palettes_LinkGloveColors, X : STA.l $7EC4FA : STA.l $7EC6FA
    
    .defaultGloveColor
    
    SEP #$30
    
    INC $15
    
    RTL
}

; ==============================================================================

; $0DEE3A-$0DEE51 LONG JUMP LOCATION
Palette_PalaceMapBg:
{
    ; Much like the name implies, loads the palettes for
    ; the Palace Map BG graphics.
    
    REP #$21
    
    ; Sets source address to $1BE544 (cpu address)
    ; The bank of 0x1B is plugged in by Palette_MultiLoad
    LDA.w #$E544 : STA $00
    
    REP #$10
    
    LDA.w #$0040 ; Starting target palette is BP-2
    LDX.w #$000F ; Each palette has 16 colors
    LDY.w #$0005 ; Load 6 palettes
    
    JSR Palette_MultiLoad
    
    SEP #$30
    
    RTL
}

; =============================================

; $0DEE52-$0DEE73 LONG JUMP LOCATION
Palette_Hud:
{
    REP #$21
    
    LDX $0AB2
    
    LDA PaletteIDtoOffset_HUD, X : AND.w #$00FF : ADC.w #$D660 : STA $00
    
    ; X/Y registers are 8-bit
    REP #$10
    
    ; Target BP0 through BP1 (full)
    ; Each palette has 16 colors.
    ; Load 2 palettes
    LDA.w #$0000
    LDX.w #$000F
    LDY.w #$0001
    
    JSR Palette_MultiLoad
    
    SEP #$30
    
    RTL
}

; =============================================

; $0DEE74-$0DEEA7 LONG JUMP LOCATION
Palette_DungBgMain:
{
    ; Note this resets the carry. (For the ADC below.)
    REP #$21
    
    ; This is the palette index for a certain background
    LDX $0AB6
    
    LDA PaletteIDtoOffset_UW, X : ADC.w #$D734 : STA $00 : PHA
    
    REP #$10
    
    LDA.w #$0042 ; Target BP-2 through BP-7 (full)
    LDX.w #$000E ; (Length - 1) (in words) of the palettes.
    LDY.w #$0005 ; Load 6 palettes
    
    JSR Palette_MultiLoad
    
    ; Now get that value of A before the subroutine.
    PLA
    
    ; Reload it to $00.
    STA $00
    
    ; Target SP-0 (second half)
    LDA.w #$0112
    
    ; Unknown variable
    LDX $0ABD : BEQ .useSP0
        ; Target SP-7 (second half)
        LDA.w #$01F2
    
    .useSP0
    
    LDX.w #$0006
    
    JSR Palette_SingleLoad
    
    SEP #$30
    
    RTL
}

; =============================================

; $0DEEA8-$0DEEC6 LONG JUMP LOCATION
Palette_OverworldBgAux3:
{
    REP #$21
    
    LDX $0AB8
    
    LDA PaletteIDtoOffset, X : AND.w #$00FF : ADC.w #$E604 : STA $00
    
    REP #$10
    
    LDA.w #$00E2 ; Target BP-7 (first half)
    LDX.w #$0006
    
    JSR Palette_SingleLoad
    
    SEP #$30
    
    RTL
}

; =============================================

; $0DEEC7-$0DEEE7 LONG JUMP LOCATION
Palette_OverworldBgMain:
{
    REP #$21
    
    LDA $0AB3 : ASL A : TAX
    
    LDA PaletteIDtoOffset_OW2, X : ADC.w #$E6C8 : STA $00
    
    REP #$10
    
    ; Target BP2 through BP6 (first halves)
    ; each palette has 7 colors
    ; Load 5 palettes
    LDA.w #$0042
    LDX.w #$0006
    LDY.w #$0004
    
    JSR Palette_MultiLoad
    
    SEP #$30
    
    RTL
}

; =============================================

; $0DEEE8-$0DEF0B LONG JUMP LOCATION
Palette_OverworldBgAux1:
{
    REP #$21
    
    LDA $0AB4 : AND.w #$00FF : ASL A : TAX
    
    LDA PaletteIDtoOffset_OW, X : ADC.w #$E86C : STA $00
    
    REP #$10
    
    LDA.w #$0052 ; Target BP-2 through BP-4 (second halves)
    LDX.w #$0006 ; each one has 7 colors
    LDY.w #$0002 ; Load 3 palettes
    
    JSR Palette_MultiLoad
    
    REP #$30
    
    RTL
}

; =============================================

; $0DEF0C-$0DEF2F LONG JUMP LOCATION
Palette_OverworldBgAux2:
{
    REP #$21
    
    LDA $0AB5 : AND.w #$00FF : ASL A : TAX
    
    LDA PaletteIDtoOffset_OW, X : ADC.w #$E86C : STA $00
    
    REP #$10
    
    LDA.w #$00B2 ; Target BP-5 through BP-7 (second halves)
    LDX.w #$0006 ; each one has 7 colors
    LDY.w #$0002 ; load 3 palettes
    
    JSR Palette_MultiLoad
    
    SEP #$30
    
    RTL
}

; ==============================================================================

; $0DEF30-$0DEF4A LOCAL JUMP LOCATION
Palette_SingleLoad:
{
    ; Unlike like the Subroutine after this one, it only loads one palette to
    ; memory.
    ; Parameters: X = number of colors (i.e. number of words/16-bit values to
    ;                 write)
    ;             A = offset for placing palette in memory.
    
    ; Ensures the counter is saved
    ; Generally the place to look for this value is $0AA9 (high byte)
    TXY : CLC : ADC $0AA8 : TAX
    
    ; Ensure the data bank being drawn from is 1B = #$D in Rom
    LDA.w #$001B : STA $02

    .copyPalette

        ; Since this is a long indirect, that's why #$1B was put in $02.
        LDA [$00] : STA.l $7EC300, X
        
        INC $00 : INC $00
        
        INX #2
    DEY : BPL .copyPalette
    
    RTS
}

; ==============================================================================

; $0DEF4B-$0DEF7A LOCAL JUMP LOCATION
Palette_MultiLoad:
{
    ; Description: Generally used to load multiple palettes for BGs. Upon close
    ; inspection, one sees that this algorithm is almost the same as the last
    ; subroutine.
    ; Parameters: X = (number of colors in the palette - 1)
    ;             A = offset to add to $7EC300, in other words, where to write 
    ;             in palette memory.
    ;             Y = (number of palettes to load - 1)
    
    STA $04 ; Save the values for future reference.
    STX $06
    STY $08
    
    ; The absolute address at $00 was planted in the calling function. This
    ; value is the bank #$1B ( => D in Rom) The address is found from $0AB6.
    LDA.w #$001B
    STA $02 ; And of course, store it at $02
    
    .nextPalette
    ; $0AA8 + A parameter will be the X value.
    LDA $0AA8 : CLC : ADC $04 : TAX
    
    LDY $06 ; Tell me how long the palette is.
    
    .copyColors
        ; We're loading A from the address set up in the calling function.
        LDA [$00] : STA.l $7EC300, X 
        
        ; Increment the absolute portion of the address by two, and decrease
        ; the color count by one.
        INC $00 : INC $00
        
        INX #2
    
    ; So basically loop (Y+1) times, taking (Y * 2 bytes) to $7EC300, X .       
    DEY : BPL .copyColors
    
    ; This technique bumps us up to the next 4bpp (16 color) palette.
    LDA $04 : CLC : ADC.w #$0020 : STA $04
    
    ; Decrease the number of palettes we have to load.
    DEC $08
    
    BPL .nextPalette
    
    ; We're done loading palettes.
    
    RTS
}

; =============================================

; $0DEF7B-$0DEF95 LOCAL JUMP LOCATION
Palette_ArbitraryLoad:
{
    ; This routine accepts a 2 byte pointer local to bank 0x1B
    ; A = starting offset into the palette buffer to copy to
    ; X = the number of colors in the palette
    
    TXY : TAX
    
    LDA.w #$001B : STA $02
    
    .loop

        LDA [$00] : STA.l $7EC300, X : STA.l $7EC500, X
        
        INC $00 : INC $00
        
        INX #2
    DEY : BPL .loop
    
    RTS
}

; ==============================================================================

; $0DEF96-$0DF031 LONG JUMP LOCATION
Palette_SelectScreen:
{
    ; This routine sets up the palettes for each of the three Links on the
    ; Select screen.
    
    ; Set data bank to 0x1B.
    PHB : LDA.b #$1B : PHA : PLB
    
    REP #$30
    
    ; Save slot 1.
    
    LDX.w #$0000
    
    ; This tells us what kind of gloves link has.
    LDA.l $700354 : STA $0C
    
    ; The value for your armor.
    LDA.l $70035B
    
    JSR Palette_SelectScreenArmor
    
    LDX.w #$0000
    
    LDA.l $700359
    
    JSR Palette_SelectScreenSword
    
    LDX.w #$0000
    
    LDA.l $70035A
    
    JSR Palette_SelectScreenShield
    
    ; Save slot two.
    
    LDX.w #$0040
    
    ; Again we need the palette for his gloves.
    LDA.l $700854 : STA $0C
    
    ; The value for the armor.
    LDA.l $70085B
    
    JSR Palette_SelectScreenArmor
    
    LDX.w #$0040
    
    LDA.l $700859
    
    JSR Palette_SelectScreenSword
    
    LDX.w #$0040
    
    LDA.l $70085A
    
    JSR Palette_SelectScreenShield
    
    ; Save slot three.
    
    LDX.w #$0080
    
    ; Again we need the palette for his gloves.
    LDA.l $700D54 : STA $0C
    
    LDA.l $700D5B
    
    JSR Palette_SelectScreenArmor
    
    LDX.w #$0080
    
    LDA.l $700D59
    
    JSR Palette_SelectScreenSword
    
    LDX.w #$0080
    
    LDA.l $700D5A
    
    JSR Palette_SelectScreenShield
    
    LDY.w #$0000
    LDX.w #$0000
    
    .loadFairyPalette
    
        ; This section of code has to do with loading the fairy sprite used
        ; For selecting which game you're in.
        
        LDA.w PaletteData_sprite_00_right, Y : STA.l $7EC4D0, X : STA.l $7EC6D0, X
        LDA.w PaletteData_sprite_01_right, Y : STA.l $7EC4F0, X : STA.l $7EC6F0, X
        
        INY #2
        INX #2
    CPX.w #$000E : BNE .loadFairyPalette
    
    SEP #$30
    
    PLB
    
    RTL
}

; ==============================================================================

; $0DF032-$0DF071 LOCAL JUMP LOCATION
Palette_SelectScreenArmor:
{
    ; And gloves!
    
    PHX
    
    ;  Varies among #$00, #$40, #$80
    AND.w #$00FF : ASL A : TAY
    
    ; Will be 0, 30, or 60
    LDA.w PaletteIDtoOffset_16bit, Y : AND.w #$00FF : CLC : ADC.w #$00F0 : TAY
    
    ; Length of the palette in Words
    LDA.w #$000F : STA $0E
    
    .loadArmorPalette
    
        ; Load the fairys's palette data?
        LDA.w PaletteData, Y : STA.l $7EC402, X : STA.l $7EC602, X
        
        INY #2
        
        INX #2 ; Hence we will be writing #$F * 2 bytes = #$1E
    DEC $0E : BNE .loadArmorPalette
    
    PLX
    
    ; This had $700354 (or 834 or D34)'s value.
    LDA $0C : AND.w #$00FF : BEQ .defaultGloveColor
        ; We're here if $0C was nonzero.
        ; Y = 2*(A - 1)
        DEC A : ASL A : TAY
        
        ; X will be #$00, #$40, #$80...
        LDA.w Palettes_LinkGloveColors, Y : STA.l $7EC41A, X : STA.l $7EC61A, X
    
    .defaultGloveColor
    
    RTS
}

; =============================================

; $0DF072-$0DF099 LOCAL JUMP LOCATION
Palette_SelectScreenSword:
{
    ; Expects A to be the sword's value.
    AND.w #$00FF : TAY ; Will be 0-4.
    
    ; Will be #$00, #$06, #$0C, #$12...
    ; Generally will be #$418, #$41E, #$424, #$42A
    LDA.w SwordPaletteOffsets, Y : AND.w #$00FF : CLC : ADC.w #$0418 : TAY
    
    ; The length of the palette in Word Length
    LDA.w #$0003 : STA $0E
    
    .copyPalette
    
        LDA.w PaletteData, Y : STA.l $7EC432, X : STA.l $7EC632, X
        
        INY #2
        
        INX #2
        
        ; Branch 3 times, write 6 bytes, go home...
    DEC $0E : BNE .copyPalette
    
    RTS
}
    
; =============================================

; $0DF09A-$0DF0C1 LOCAL JUMP LOCATION
Palette_SelectScreenShield:
{
    ; This routine is generally the same as the two above.
    ; A is expected to be the value of your shield. (0 - 3)
    AND.w #$00FF : TAY
    
    ; #$00, #$08, #$10
    ; A will be #$430, #$438, #$440
    LDA.w ShieldPaletteOffsets, Y : AND.w #$00FF : CLC : ADC.w #$0430 : TAY
    
    ; Length of the palette in Word Length. (8 bytes)
    LDA.w #$0004 : STA $0E
    
    .copyPalette
    
        LDA.w PaletteData, Y : STA.l $7EC438, X : STA.l $7EC638, X
        
        INY #2
        
        INX #2
    DEC $0E : BNE .copyPalette
    
    RTS
}

; ==============================================================================

; $0DF0C2-$0DF107 LONG JUMP LOCATION
Palettes_LoadAgahnim:
{
    ; The only place this routine is referenced from is the
    ; (assumed for now) unused submodule 0x06 of module 0x0E
    ; Seems to have something to do with Agahnim 2 though.
    
    ; In general terms this loads the upper halves of SP_3, SP_4, SP_5,
    ; and SP_6.
    REP #$31
    
    ; TODO: See if there is a way to reference the address directly here.
    ; #$D4E0 is the address for PaletteData_spriteaux_00.
    LDA PaletteIDtoOffset_16bit_agah : ADC.w #$D4E0 : STA $00
    
    PHA
    
    LDA.w #$0162
    LDX.w #$0006
    
    JSR Palette_ArbitraryLoad
    
    PLA : STA $00
    
    PHA
    
    LDA.w #$0182
    LDX.w #$0006
    
    JSR Palette_ArbitraryLoad
    
    PLA : STA $00
    
    LDA.w #$01A2
    LDX.w #$0006
    
    JSR Palette_ArbitraryLoad
    
    ; TODO: See if there is a way to reference the address directly here.
    ; #$D4E0 is the address for PaletteData_spriteaux_00.
    LDA.l $1BEC00 : CLC : ADC.w #$D4E0 : STA $00
    
    LDA.w #$01C2
    LDX.w #$0006
    
    JSR Palette_ArbitraryLoad
    
    SEP #$30
    
    INC $15
    
    RTL
}

; ==============================================================================

; $0DF108-$0DF10F NULL
NULL_1BF108:
{
    db $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
}

; ==============================================================================

; Some kind of tile properties data for bank $05... Seems to be
; indexed by map16 values.
; $0DF110-$0DFFBF DATA
OverworldTileTypeTable:
{
    db $01, $27, $01, $02, $02, $02, $01, $01
    db $01, $01, $01, $01, $01, $01, $01, $02
    db $01, $27, $01, $01, $01, $01, $27, $27
    db $01, $02, $01, $02, $01, $01, $27, $27
    db $01, $01, $02, $27, $01, $01, $27, $27
    db $02, $27, $01, $01, $02, $02, $27, $02
    db $02, $01, $01, $02, $48, $48, $50, $02
    db $02, $01, $48, $02, $02, $00, $02, $02
    db $02, $02, $01, $02, $01, $27, $02, $02
    db $01, $00, $01, $02, $02, $01, $01, $01
    db $02, $02, $02, $02, $27, $43, $00, $01
    db $02, $02, $01, $01, $01, $01, $43, $01
    db $02, $01, $00, $01, $42, $02, $02, $48
    db $02, $02, $01, $02, $48, $02, $02, $42
    db $02, $48, $00, $48, $01, $02, $27, $27
    db $27, $48, $01, $48, $48, $02, $27, $27
    db $01, $02, $01, $01, $02, $02, $27, $27
    db $27, $27, $01, $01, $02, $01, $02, $02
    db $01, $01, $01, $01, $02, $27, $02, $01
    db $02, $02, $27, $27, $27, $27, $00, $00
    db $00, $00, $02, $00, $00, $00, $00, $48
    db $27, $00, $00, $00, $48, $00, $27, $27
    db $27, $27, $02, $02, $02, $00, $27, $02
    db $02, $00, $01, $01, $02, $02, $00, $02
    db $01, $02, $02, $02, $01, $00, $00, $10
    db $18, $01, $01, $02, $01, $01, $02, $01
    db $01, $29, $00, $18, $02, $02, $01, $01
    db $01, $01, $48, $10, $01, $01, $27, $01
    db $01, $48, $48, $01, $01, $01, $18, $00
    db $48, $01, $01, $01, $48, $01, $01, $01
    db $48, $01, $27, $01, $01, $01, $01, $01
    db $48, $02, $02, $02, $02, $02, $02, $48
    db $00, $54, $48, $48, $12, $1A, $1A, $00
    db $27, $00, $27, $27, $12, $48, $48, $48
    db $00, $00, $00, $09, $48, $09, $01, $01
    db $01, $09, $09, $09, $18, $48, $10, $09
    db $09, $09, $10, $10, $01, $48, $48, $01
    db $08, $10, $09, $09, $08, $02, $00, $48
    db $02, $01, $08, $09, $00, $02, $02, $02
    db $02, $48, $02, $01, $02, $02, $02, $02
    db $01, $12, $02, $01, $02, $02, $02, $02
    db $02, $10, $08, $00, $09, $00, $00, $12
    db $1A, $01, $01, $01, $01, $10, $01, $08
    db $01, $09, $09, $01, $00, $12, $01, $01
    db $48, $01, $12, $1A, $01, $00, $1A, $12
    db $48, $00, $01, $01, $29, $00, $18, $00
    db $00, $00, $12, $01, $01, $01, $01, $01
    db $01, $00, $01, $00, $00, $00, $00, $01
    db $02, $22, $01, $01, $02, $22, $01, $01
    db $01, $01, $01, $02, $02, $01, $01, $02
    db $42, $01, $01, $01, $02, $01, $43, $02
    db $02, $43, $42, $44, $01, $00, $29, $01
    db $42, $01, $02, $02, $01, $00, $01, $02
    db $02, $02, $02, $02, $02, $02, $02, $01
    db $02, $02, $02, $02, $02, $01, $00, $01
    db $01, $01, $01, $01, $01, $02, $02, $01
    db $00, $01, $00, $02, $00, $01, $02, $02
    db $02, $02, $02, $02, $22, $01, $02, $02
    db $02, $02, $02, $01, $01, $01, $01, $02
    db $02, $01, $01, $01, $01, $02, $43, $01
    db $02, $02, $01, $02, $02, $00, $12, $00
    db $01, $02, $12, $01, $01, $2B, $01, $00
    db $00, $01, $18, $00, $00, $00, $00, $00
    db $00, $10, $01, $00, $00, $48, $00, $00
    db $48, $01, $00, $02, $01, $02, $00, $00
    db $02, $01, $02, $00, $01, $00, $48, $52
    db $00, $00, $4B, $00, $00, $00, $00, $00
    db $00, $01, $12, $27, $2B, $01, $00, $12
    db $01, $01, $01, $01, $09, $01, $57, $57
    db $57, $57, $01, $1A, $02, $02, $01, $02
    db $02, $01, $1A, $00, $1A, $48, $00, $00
    db $01, $53, $18, $56, $56, $56, $56, $01
    db $48, $48, $02, $01, $02, $01, $02, $02
    db $01, $01, $01, $02, $01, $01, $02, $01
    db $01, $01, $01, $01, $01, $02, $01, $01
    db $01, $01, $01, $01, $01, $01, $18, $10
    db $02, $02, $10, $01, $02, $02, $00, $00
    db $02, $00, $02, $02, $02, $02, $02, $02
    db $00, $01, $01, $48, $02, $48, $01, $02
    db $00, $00, $00, $00, $02, $01, $02, $02
    db $02, $02, $02, $02, $02, $02, $02, $02
    db $02, $02, $02, $02, $02, $02, $02, $01
    db $01, $02, $02, $02, $02, $02, $02, $00
    db $27, $20, $20, $20, $27, $27, $27, $02
    db $20, $20, $02, $02, $02, $02, $02, $02
    db $01, $01, $01, $01, $00, $00, $02, $02
    db $02, $01, $18, $02, $02, $01, $02, $02
    db $02, $02, $02, $5C, $09, $01, $02, $02
    db $02, $5C, $09, $09, $09, $02, $08, $09
    db $09, $48, $02, $09, $02, $08, $08, $02
    db $01, $10, $08, $09, $08, $18, $08, $09
    db $08, $08, $09, $09, $02, $09, $1A, $09
    db $1A, $00, $01, $01, $08, $00, $48, $48
    db $48, $09, $09, $00, $48, $48, $10, $09
    db $00, $01, $02, $22, $29, $00, $09, $1A
    db $08, $5C, $08, $5C, $01, $01, $02, $08
    db $12, $01, $18, $01, $12, $01, $1A, $48
    db $02, $08, $5C, $08, $00, $02, $02, $08
    db $02, $5C, $02, $02, $08, $00, $48, $00
    db $12, $01, $48, $00, $02, $02, $12, $12
    db $12, $02, $00, $02, $08, $08, $08, $02
    db $02, $01, $00, $01, $02, $01, $02, $02
    db $01, $02, $02, $27, $27, $27, $27, $27
    db $27, $01, $01, $01, $02, $02, $01, $01
    db $01, $02, $02, $02, $02, $01, $01, $02
    db $02, $02, $02, $01, $01, $01, $02, $02
    db $01, $01, $02, $01, $02, $2B, $01, $43
    db $01, $01, $01, $01, $01, $01, $02, $02
    db $02, $00, $00, $02, $02, $27, $27, $27
    db $27, $27, $01, $01, $27, $55, $55, $27
    db $01, $01, $27, $02, $55, $55, $01, $01
    db $01, $01, $01, $02, $02, $00, $40, $01
    db $02, $02, $48, $48, $48, $00, $29, $01
    db $01, $01, $2B, $01, $02, $01, $02, $42
    db $00, $02, $02, $01, $00, $00, $08, $08
    db $01, $08, $1A, $01, $01, $08, $02, $01
    db $08, $02, $01, $27, $01, $02, $00, $27
    db $27, $00, $00, $00, $00, $27, $00, $00
    db $00, $00, $01, $01, $01, $01, $01, $01
    db $01, $01, $01, $01, $27, $01, $22, $27
    db $48, $48, $48, $02, $01, $00, $00, $02
    db $01, $00, $00, $01, $01, $01, $00, $01
    db $01, $01, $00, $01, $01, $27, $27, $27
    db $27, $01, $01, $01, $01, $02, $01, $02
    db $01, $02, $02, $02, $02, $02, $20, $01
    db $00, $00, $01, $00, $00, $01, $01, $01
    db $02, $22, $22, $00, $01, $43, $01, $01
    db $01, $01, $02, $01, $01, $01, $01, $01
    db $01, $48, $01, $01, $01, $01, $01, $00
    db $00, $00, $01, $01, $01, $01, $01, $00
    db $02, $00, $00, $02, $00, $00, $00, $00
    db $00, $00, $00, $02, $00, $01, $01, $01
    db $00, $01, $02, $02, $02, $48, $00, $01
    db $00, $02, $01, $02, $01, $01, $27, $01
    db $01, $00, $02, $22, $02, $02, $00, $00
    db $48, $01, $01, $01, $01, $00, $02, $02
    db $00, $48, $01, $01, $01, $27, $27, $27
    db $02, $27, $27, $27, $02, $01, $02, $01
    db $01, $01, $01, $02, $01, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $01, $02
    db $02, $02, $01, $44, $01, $27, $01, $00
    db $00, $02, $02, $02, $01, $01, $01, $01
    db $02, $01, $01, $02, $02, $02, $01, $01
    db $01, $02, $02, $02, $01, $02, $00, $02
    db $02, $02, $02, $02, $02, $00, $01, $42
    db $01, $42, $42, $00, $00, $01, $01, $01
    db $01, $00, $02, $01, $01, $01, $02, $42
    db $01, $01, $02, $02, $02, $02, $02, $00
    db $02, $02, $22, $02, $02, $00, $00, $00
    db $02, $02, $00, $02, $02, $01, $01, $01
    db $01, $42, $01, $02, $02, $02, $48, $02
    db $01, $01, $01, $01, $01, $48, $02, $01
    db $02, $01, $02, $01, $02, $01, $00, $01
    db $01, $01, $01, $00, $00, $00, $00, $00
    db $48, $00, $01, $00, $48, $48, $48, $48
    db $02, $02, $00, $01, $01, $01, $01, $02
    db $02, $02, $02, $02, $02, $22, $02, $48
    db $02, $02, $00, $00, $02, $02, $02, $02
    db $48, $02, $02, $02, $02, $02, $00, $48
    db $02, $02, $02, $02, $02, $5C, $08, $08
    db $08, $02, $27, $02, $02, $02, $02, $02
    db $00, $00, $00, $02, $02, $02, $02, $02
    db $02, $02, $02, $02, $02, $02, $02, $02
    db $01, $08, $02, $02, $02, $01, $01, $01
    db $48, $01, $01, $01, $01, $01, $01, $01
    db $22, $01, $01, $01, $01, $2B, $01, $01
    db $01, $00, $00, $00, $01, $01, $00, $02
    db $01, $48, $01, $00, $00, $00, $00, $48
    db $00, $00, $00, $00, $00, $00, $12, $01
    db $02, $48, $00, $00, $00, $00, $00, $01
    db $01, $01, $02, $01, $01, $00, $00, $02
    db $01, $01, $00, $02, $02, $01, $01, $01
    db $01, $00, $01, $01, $00, $00, $00, $01
    db $00, $48, $01, $02, $01, $01, $01, $01
    db $01, $01, $02, $01, $01, $02, $02, $01
    db $01, $01, $01, $01, $00, $02, $02, $02
    db $02, $01, $02, $01, $02, $02, $02, $00
    db $00, $01, $01, $01, $01, $00, $00, $00
    db $00, $01, $00, $00, $12, $01, $01, $02
    db $01, $01, $00, $01, $29, $01, $42, $02
    db $02, $01, $00, $02, $01, $01, $01, $02
    db $01, $01, $01, $01, $01, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $01, $01
    db $01, $01, $02, $02, $00, $02, $02, $00
    db $00, $48, $48, $01, $01, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $01, $48
    db $02, $02, $48, $00, $00, $00, $00, $00
    db $48, $01, $01, $48, $48, $01, $01, $00
    db $02, $02, $48, $02, $02, $01, $01, $02
    db $02, $42, $02, $02, $02, $27, $00, $01
    db $29, $01, $01, $01, $01, $00, $01, $01
    db $01, $00, $01, $01, $00, $01, $01, $01
    db $01, $01, $01, $01, $00, $00, $02, $00
    db $02, $01, $02, $02, $00, $00, $02, $01
    db $01, $01, $01, $01, $01, $02, $27, $27
    db $00, $27, $02, $00, $01, $00, $00, $00
    db $00, $00, $48, $00, $00, $00, $00, $00
    db $48, $01, $01, $01, $00, $01, $01, $01
    db $02, $02, $02, $48, $02, $02, $01, $00
    db $00, $48, $48, $00, $27, $27, $27, $48
    db $00, $27, $01, $01, $48, $00, $27, $01
    db $01, $48, $01, $01, $01, $01, $01, $27
    db $27, $12, $01, $02, $27, $01, $01, $01
    db $01, $01, $48, $27, $02, $01, $01, $01
    db $00, $12, $00, $29, $27, $01, $01, $01
    db $10, $02, $01, $01, $01, $02, $01, $01
    db $00, $00, $00, $02, $01, $00, $00, $00
    db $02, $01, $00, $00, $00, $00, $02, $02
    db $00, $00, $09, $00, $00, $48, $00, $02
    db $00, $00, $00, $00, $00, $02, $00, $00
    db $00, $00, $00, $00, $00, $00, $00, $00
    db $08, $5C, $09, $02, $02, $48, $48, $48
    db $48, $01, $01, $01, $12, $00, $00, $01
    db $01, $02, $01, $01, $01, $01, $02, $01
    db $1A, $02, $02, $00, $02, $02, $2B, $01
    db $01, $02, $01, $02, $01, $01, $02, $02
    db $02, $01, $02, $00, $02, $02, $2B, $02
    db $01, $01, $01, $02, $02, $01, $01, $22
    db $02, $01, $01, $02, $02, $02, $01, $22
    db $10, $01, $22, $00, $00, $00, $00, $00
    db $00, $01, $10, $01, $01, $22, $01, $00
    db $00, $00, $00, $01, $01, $01, $01, $00
    db $00, $00, $00, $01, $01, $01, $01, $01
    db $01, $01, $01, $00, $01, $00, $00, $00
    db $00, $48, $02, $02, $46, $46, $01, $01
    db $01, $22, $01, $01, $00, $02, $02, $02
    db $22, $02, $02, $01, $44, $00, $01, $01
    db $00, $00, $00, $00, $01, $00, $02, $00
    db $01, $02, $51, $02, $02, $02, $02, $00
    db $00, $12, $01, $01, $01, $02, $02, $01
    db $01, $01, $01, $01, $02, $01, $01, $02
    db $01, $01, $02, $01, $02, $02, $44, $01
    db $02, $02, $02, $02, $02, $00, $01, $08
    db $02, $02, $02, $00, $00, $00, $00, $00
    db $02, $48, $00, $00, $00, $02, $29, $00
    db $00, $00, $00, $00, $00, $00, $00, $01
    db $00, $12, $00, $00, $00, $00, $00, $00
    db $00, $00, $00, $48, $00, $00, $48, $00
    db $00, $00, $00, $01, $48, $00, $12, $12
    db $1A, $12, $29, $01, $01, $01, $01, $00
    db $01, $01, $10, $48, $48, $48, $02, $48
    db $01, $01, $02, $01, $27, $01, $02, $02
    db $02, $01, $01, $01, $01, $01, $01, $01
    db $01, $01, $02, $02, $01, $27, $01, $01
    db $01, $01, $27, $27, $01, $02, $02, $01
    db $01, $27, $27, $02, $02, $01, $01, $01
    db $01, $02, $02, $01, $01, $01, $01, $02
    db $02, $02, $02, $02, $02, $02, $00, $48
    db $02, $02, $00, $02, $01, $00, $01, $02
    db $02, $02, $02, $01, $27, $02, $02, $01
    db $00, $01, $02, $02, $27, $02, $01, $01
    db $02, $02, $27, $02, $02, $01, $02, $02
    db $02, $02, $01, $01, $02, $02, $02, $02
    db $27, $02, $02, $02, $02, $02, $02, $44
    db $02, $01, $01, $02, $02, $02, $02, $01
    db $02, $02, $02, $27, $02, $02, $01, $02
    db $02, $02, $01, $01, $01, $02, $02, $01
    db $00, $01, $02, $02, $00, $20, $20, $20
    db $20, $02, $27, $27, $27, $00, $02, $00
    db $00, $02, $02, $02, $27, $27, $01, $01
    db $27, $27, $27, $27, $01, $02, $02, $01
    db $01, $02, $27, $02, $01, $27, $27, $27
    db $27, $00, $00, $02, $00, $27, $00, $00
    db $27, $27, $00, $27, $27, $02, $01, $02
    db $01, $01, $00, $02, $02, $48, $02, $10
    db $00, $02, $01, $02, $00, $00, $00, $00
    db $01, $00, $00, $02, $01, $02, $01, $01
    db $00, $00, $02, $08, $02, $00, $02, $09
    db $01, $02, $01, $01, $08, $01, $08, $01
    db $02, $12, $01, $02, $10, $12, $02, $02
    db $02, $01, $02, $02, $02, $02, $01, $08
    db $01, $00, $00, $00, $01, $01, $10, $01
    db $02, $08, $08, $09, $08, $02, $01, $01
    db $02, $01, $01, $00, $01, $02, $01, $42
    db $01, $01, $01, $01, $02, $02, $02, $02
    db $01, $01, $01, $01, $42, $42, $01, $02
    db $02, $01, $02, $02, $02, $02, $01, $01
    db $01, $01, $01, $01, $01, $01, $02, $02
    db $02, $02, $02, $02, $02, $02, $02, $02
    db $01, $02, $01, $01, $02, $02, $02, $02
    db $02, $02, $02, $02, $02, $01, $01, $01
    db $01, $02, $22, $02, $01, $02, $02, $02
    db $01, $02, $02, $02, $22, $02, $02, $02
    db $01, $01, $02, $02, $01, $02, $02, $01
    db $02, $02, $02, $02, $02, $02, $02, $02
    db $01, $01, $01, $00, $01, $01, $01, $01
    db $02, $02, $02, $02, $01, $01, $02, $02
    db $02, $02, $02, $02, $02, $02, $02, $02
    db $02, $02, $02, $01, $00, $02, $00, $00
    db $00, $00, $00, $10, $02, $02, $02, $02
    db $02, $02, $02, $02, $01, $08, $08, $00
    db $01, $02, $02, $02, $02, $01, $02, $01
    db $22, $01, $01, $02, $02, $18, $01, $01
    db $01, $02, $02, $02, $02, $02, $02, $02
    db $01, $02, $02, $02, $02, $02, $02, $42
    db $02, $01, $02, $02, $02, $02, $02, $48
    db $48, $48, $48, $00, $02, $01, $00, $02
    db $02, $27, $27, $01, $00, $27, $02, $00
    db $02, $00, $00, $02, $02, $00, $00, $02
    db $01, $02, $27, $00, $00, $02, $00, $01
    db $01, $29, $00, $02, $00, $10, $01, $00
    db $12, $00, $00, $01, $01, $48, $02, $02
    db $00, $00, $02, $02, $00, $02, $02, $00
    db $00, $00, $02, $02, $00, $02, $00, $00
    db $00, $02, $00, $02, $00, $00, $00, $02
    db $00, $00, $00, $02, $00, $02, $00, $00
    db $00, $02, $00, $02, $02, $00, $00, $00
    db $00, $02, $00, $01, $09, $10, $27, $44
    db $02, $01, $00, $00, $02, $02, $02, $01
    db $01, $02, $02, $00, $01, $01, $01, $48
    db $00, $01, $00, $00, $01, $01, $00, $48
    db $48, $00, $02, $02, $02, $02, $02, $02
    db $00, $02, $00, $02, $02, $02, $00, $02
    db $48, $00, $01, $48, $48, $00, $01, $48
    db $01, $01, $01, $01, $01, $02, $02, $01
    db $01, $01, $01, $00, $02, $48, $02, $48
    db $01, $48, $01, $48, $00, $02, $02, $02
    db $01, $01, $02, $01, $01, $01, $00, $00
    db $01, $00, $00, $00, $00, $00, $00, $01
    db $01, $00, $01, $01, $01, $02, $22, $00
    db $02, $01, $01, $01, $02, $01, $44, $01
    db $01, $02, $00, $01, $02, $22, $01, $02
    db $42, $22, $02, $02, $01, $01, $02, $02
    db $02, $01, $01, $01, $01, $02, $02, $01
    db $01, $02, $01, $01, $02, $02, $01, $01
    db $01, $02, $01, $01, $02, $02, $43, $02
    db $02, $02, $02, $02, $01, $02, $02, $01
    db $01, $01, $02, $02, $01, $01, $01, $02
    db $02, $02, $01, $02, $43, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $00, $01
    db $00, $00, $00, $01, $01, $00, $01, $01
    db $01, $01, $01, $01, $02, $48, $02, $02
    db $01, $00, $00, $00, $02, $43, $00, $02
    db $01, $00, $00, $01, $01, $00, $00, $02
    db $01, $01, $01, $01, $01, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $02, $02
    db $02, $01, $01, $01, $01, $01, $02, $02
    db $01, $02, $02, $01, $01, $42, $01, $02
    db $02, $01, $02, $00, $02, $01, $02, $01
    db $00, $01, $01, $00, $00, $02, $01, $01
    db $02, $02, $02, $02, $01, $00, $01, $02
    db $01, $01, $01, $01, $01, $01, $00, $00
    db $01, $01, $01, $00, $00, $48, $00, $00
    db $00, $01, $01, $01, $02, $02, $01, $01
    db $02, $02, $01, $02, $02, $01, $01, $01
    db $01, $01, $01, $00, $48, $00, $48, $00
    db $00, $00, $01, $01, $01, $01, $01, $00
    db $00, $01, $00, $00, $00, $00, $01, $02
    db $01, $00, $02, $27, $00, $01, $01, $01
    db $01, $00, $02, $00, $01, $02, $00, $01
    db $01, $01, $02, $00, $02, $01, $02, $01
    db $01, $01, $27, $00, $09, $09, $00, $09
    db $02, $1A, $10, $01, $01, $01, $01, $00
    db $00, $48, $09, $09, $02, $00, $09, $09
    db $02, $09, $09, $01, $02, $02, $09, $09
    db $09, $42, $09, $01, $02, $09, $02, $02
    db $02, $02, $02, $09, $09, $09, $09, $02
    db $09, $02, $09, $01, $01, $01, $09, $09
    db $09, $09, $09, $00, $00, $02, $09, $02
    db $02, $02, $09, $00, $00, $02, $48, $09
    db $09, $09, $09, $00, $00, $02, $09, $09
    db $02, $09, $00, $00, $00, $02, $00, $00
    db $00, $00, $00, $00, $01, $02, $00, $02
    db $02, $00, $00, $00, $00, $00, $00, $09
    db $48, $09, $01, $01, $02, $02, $02, $01
    db $02, $48, $00, $00, $48, $00, $00, $00
    db $00, $12, $09, $09, $02, $02, $09, $02
    db $01, $02, $02, $09, $02, $12, $01, $12
    db $02, $01, $01, $00, $00, $10, $01, $00
    db $01, $1A, $01, $02, $01, $01, $18, $00
    db $00, $00, $00, $01, $08, $01, $09, $00
    db $09, $09, $00, $09, $00, $00, $00, $00
    db $00, $00, $00, $00, $00, $00, $00, $00
    db $02, $02, $02, $00, $09, $00, $01, $01
    db $01, $02, $02, $01, $00, $00, $01, $02
    db $02, $02, $00, $09, $01, $01, $01, $01
    db $02, $02, $00, $01, $02, $02, $01, $01
    db $02, $01, $01, $02, $00, $02, $22, $09
    db $00, $00, $00, $01, $00, $02, $00, $00
    db $48, $48, $48, $09, $09, $09, $09, $42
    db $02, $09, $09, $02, $09, $01, $09, $02
    db $02, $02, $02, $01, $01, $01, $01, $01
    db $01, $01, $01, $01, $01, $01, $01, $01
    db $01, $01, $00, $00, $00, $00, $01, $01
    db $22, $22, $01, $01, $00, $02, $00, $02
    db $02, $02, $09, $01, $02, $01, $01, $01
    db $01, $02, $02, $02, $02, $00, $02, $02
    db $00, $01, $08, $02, $00, $12, $01, $01
    db $01, $01, $01, $01, $01, $01, $02, $01
    db $01, $02, $02, $02, $02, $02, $01, $02
    db $01, $01, $01, $01, $02, $02, $02, $01
    db $02, $01, $01, $01, $01, $01, $01, $02
    db $01, $01, $01, $00, $01, $01, $02, $01
    db $01, $01, $01, $01, $01, $01, $00, $00
    db $00, $00, $00, $00, $00, $00, $00, $00
    db $00, $00, $00, $00, $00, $00, $00, $00
    db $00, $48, $48, $02, $00, $02, $02, $02
    db $02, $02, $02, $02, $01, $01, $02, $02
    db $02, $02, $01, $01, $48, $00, $01, $01
    db $01, $01, $02, $02, $02, $02, $02, $48
    db $02, $02, $02, $02, $02, $02, $00, $02
    db $00, $00, $02, $02, $00, $02, $00, $02
    db $00, $02, $02, $00, $02, $02, $02, $02
    db $02, $00, $00, $02, $02, $48, $02, $02
    db $02, $02, $02, $02, $42, $42, $02, $02
    db $02, $02, $02, $22, $22, $22, $02, $02
    db $08, $00, $02, $22, $22, $22, $02, $08
    db $02, $02, $02, $02, $00, $02, $02, $02
    db $02, $00, $01, $01, $01, $01, $02, $02
    db $02, $01, $01, $02, $01, $00, $01, $02
    db $01, $01, $02, $00, $02, $00, $00, $01
    db $02, $02, $02, $00, $01, $01, $01, $00
    db $01, $02, $02, $01, $02, $02, $01, $00
    db $01, $02, $01, $02, $02, $02, $00, $02
    db $02, $00, $00, $48, $09, $09, $09, $00
    db $09, $09, $09, $09, $09, $09, $09, $09
    db $09, $09, $08, $09, $08, $00, $00, $02
    db $02, $02, $02, $09, $5C, $08, $00, $00
    db $02, $02, $00, $02, $02, $5C, $09, $10
    db $09, $09, $27, $27, $27, $09, $00, $5C
    db $02, $00, $00, $02, $01, $00, $00, $01
    db $02, $02, $02, $02, $02, $02, $02, $02
    db $02, $02, $02, $02, $02, $01, $00, $00
    db $00, $09, $09, $09, $09, $09, $00, $00
    db $09, $09, $09, $48, $09, $09, $09, $09
    db $09, $09, $00, $09, $09, $09, $48, $00
    db $00, $00, $02, $2E, $28, $2B, $2A, $01
    db $01, $00, $01, $01, $01, $01, $01, $02
    db $01, $22, $01, $01, $22, $01, $02, $01
    db $01, $01, $01, $01, $00, $2E, $22, $2F
    db $29, $02, $01, $01, $01, $01, $01, $01
    db $1A, $1A, $1A, $1A, $1A, $1A, $1A, $01
    db $01, $12, $01, $01, $01, $01, $01, $01
    db $01, $01, $01, $12, $01, $02, $02, $01
    db $01, $02, $02, $02, $12, $02, $02, $01
    db $01, $02, $02, $02, $02, $02, $02, $02
    db $01, $01, $00, $00, $01, $01, $00, $00
    db $01, $01, $01, $01, $02, $02, $01, $01
    db $00, $00, $01, $01, $02, $02, $00, $00
    db $00, $00, $00, $00, $00, $48, $00, $48
    db $48, $48, $48, $00, $20, $00, $00, $00
    db $48, $02, $01, $02, $42, $02, $02, $02
    db $42, $02, $02, $02, $42, $02, $20, $00
    db $00, $00, $00, $00, $00, $00, $00, $00
    db $00, $00, $00, $00, $00, $00, $00, $09
    db $09, $09, $00, $00, $09, $00, $09, $00
    db $00, $00, $00, $00, $00, $09, $00, $00
    db $00, $48, $00, $00, $00, $00, $00, $00
    db $00, $00, $00, $02, $02, $01, $02, $02
    db $22, $02, $02, $02, $02, $02, $02, $02
    db $02, $02, $02, $01, $02, $01, $01, $01
    db $22, $00, $00, $01, $01, $01, $22, $01
    db $44, $44, $29, $22, $00, $00, $00, $00
    db $00, $01, $48, $02, $02, $02, $01, $01
    db $02, $02, $01, $20, $02, $27, $22, $00
    db $00, $20, $20, $20, $20, $00, $20, $00
    db $09, $02, $02, $09, $01, $01, $02, $02
    db $09, $01, $01, $01, $09, $02, $02, $09
    db $02, $01, $02, $01, $02, $01, $01, $01
    db $01, $01, $02, $01, $09, $02, $02, $09
    db $02, $01, $02, $01, $02, $01, $01, $01
    db $02, $01, $02, $01, $02, $02, $09, $02
    db $02, $02, $02, $02, $44, $02, $02, $44
    db $44, $02, $22, $44, $43, $02, $22, $43
    db $01, $01, $01, $01, $01, $22, $01, $01
    db $01, $02, $02, $22, $00, $02, $02, $22
    db $02, $22, $02, $22, $02, $22, $02, $22
    db $02, $22, $01, $01, $00, $00, $00, $00
    db $00, $00, $00, $00, $00, $00, $00, $00
}

; ==============================================================================
